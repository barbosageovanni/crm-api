
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Cliente
 * 
 */
export type Cliente = $Result.DefaultSelection<Prisma.$ClientePayload>
/**
 * Model Transporte
 * 
 */
export type Transporte = $Result.DefaultSelection<Prisma.$TransportePayload>
/**
 * Model Atesto
 * 
 */
export type Atesto = $Result.DefaultSelection<Prisma.$AtestoPayload>
/**
 * Model Fatura
 * 
 */
export type Fatura = $Result.DefaultSelection<Prisma.$FaturaPayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Despesa
 * 
 */
export type Despesa = $Result.DefaultSelection<Prisma.$DespesaPayload>
/**
 * Model CentroCusto
 * 
 */
export type CentroCusto = $Result.DefaultSelection<Prisma.$CentroCustoPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const TipoCliente: {
  PF: 'PF',
  PJ: 'PJ'
};

export type TipoCliente = (typeof TipoCliente)[keyof typeof TipoCliente]


export const StatusFatura: {
  PENDENTE: 'PENDENTE',
  PAGA: 'PAGA',
  VENCIDA: 'VENCIDA',
  CANCELADA: 'CANCELADA'
};

export type StatusFatura = (typeof StatusFatura)[keyof typeof StatusFatura]


export const PapelUsuario: {
  ADMIN: 'ADMIN',
  USUARIO: 'USUARIO',
  GERENTE: 'GERENTE'
};

export type PapelUsuario = (typeof PapelUsuario)[keyof typeof PapelUsuario]


export const TipoAtesto: {
  ENTREGA_OK: 'ENTREGA_OK',
  AVARIA: 'AVARIA',
  DEVOLUCAO: 'DEVOLUCAO',
  OUTRO: 'OUTRO'
};

export type TipoAtesto = (typeof TipoAtesto)[keyof typeof TipoAtesto]


export const CategoriaDespesa: {
  TRANSPORTE: 'TRANSPORTE',
  ALIMENTACAO: 'ALIMENTACAO',
  MATERIAL_ESCRITORIO: 'MATERIAL_ESCRITORIO',
  MANUTENCAO: 'MANUTENCAO',
  OUTRA: 'OUTRA'
};

export type CategoriaDespesa = (typeof CategoriaDespesa)[keyof typeof CategoriaDespesa]

}

export type TipoCliente = $Enums.TipoCliente

export const TipoCliente: typeof $Enums.TipoCliente

export type StatusFatura = $Enums.StatusFatura

export const StatusFatura: typeof $Enums.StatusFatura

export type PapelUsuario = $Enums.PapelUsuario

export const PapelUsuario: typeof $Enums.PapelUsuario

export type TipoAtesto = $Enums.TipoAtesto

export const TipoAtesto: typeof $Enums.TipoAtesto

export type CategoriaDespesa = $Enums.CategoriaDespesa

export const CategoriaDespesa: typeof $Enums.CategoriaDespesa

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Clientes
 * const clientes = await prisma.cliente.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Clientes
   * const clientes = await prisma.cliente.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.cliente`: Exposes CRUD operations for the **Cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.ClienteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transporte`: Exposes CRUD operations for the **Transporte** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transportes
    * const transportes = await prisma.transporte.findMany()
    * ```
    */
  get transporte(): Prisma.TransporteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.atesto`: Exposes CRUD operations for the **Atesto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Atestos
    * const atestos = await prisma.atesto.findMany()
    * ```
    */
  get atesto(): Prisma.AtestoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fatura`: Exposes CRUD operations for the **Fatura** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Faturas
    * const faturas = await prisma.fatura.findMany()
    * ```
    */
  get fatura(): Prisma.FaturaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.despesa`: Exposes CRUD operations for the **Despesa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Despesas
    * const despesas = await prisma.despesa.findMany()
    * ```
    */
  get despesa(): Prisma.DespesaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.centroCusto`: Exposes CRUD operations for the **CentroCusto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CentroCustos
    * const centroCustos = await prisma.centroCusto.findMany()
    * ```
    */
  get centroCusto(): Prisma.CentroCustoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.2
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Cliente: 'Cliente',
    Transporte: 'Transporte',
    Atesto: 'Atesto',
    Fatura: 'Fatura',
    Usuario: 'Usuario',
    Despesa: 'Despesa',
    CentroCusto: 'CentroCusto'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "cliente" | "transporte" | "atesto" | "fatura" | "usuario" | "despesa" | "centroCusto"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Cliente: {
        payload: Prisma.$ClientePayload<ExtArgs>
        fields: Prisma.ClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findFirst: {
            args: Prisma.ClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findMany: {
            args: Prisma.ClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          create: {
            args: Prisma.ClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          createMany: {
            args: Prisma.ClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          delete: {
            args: Prisma.ClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          update: {
            args: Prisma.ClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          deleteMany: {
            args: Prisma.ClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClienteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          upsert: {
            args: Prisma.ClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.ClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      Transporte: {
        payload: Prisma.$TransportePayload<ExtArgs>
        fields: Prisma.TransporteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransporteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransporteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload>
          }
          findFirst: {
            args: Prisma.TransporteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransporteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload>
          }
          findMany: {
            args: Prisma.TransporteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload>[]
          }
          create: {
            args: Prisma.TransporteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload>
          }
          createMany: {
            args: Prisma.TransporteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransporteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload>[]
          }
          delete: {
            args: Prisma.TransporteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload>
          }
          update: {
            args: Prisma.TransporteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload>
          }
          deleteMany: {
            args: Prisma.TransporteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransporteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransporteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload>[]
          }
          upsert: {
            args: Prisma.TransporteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransportePayload>
          }
          aggregate: {
            args: Prisma.TransporteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransporte>
          }
          groupBy: {
            args: Prisma.TransporteGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransporteGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransporteCountArgs<ExtArgs>
            result: $Utils.Optional<TransporteCountAggregateOutputType> | number
          }
        }
      }
      Atesto: {
        payload: Prisma.$AtestoPayload<ExtArgs>
        fields: Prisma.AtestoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AtestoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AtestoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload>
          }
          findFirst: {
            args: Prisma.AtestoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AtestoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload>
          }
          findMany: {
            args: Prisma.AtestoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload>[]
          }
          create: {
            args: Prisma.AtestoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload>
          }
          createMany: {
            args: Prisma.AtestoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AtestoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload>[]
          }
          delete: {
            args: Prisma.AtestoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload>
          }
          update: {
            args: Prisma.AtestoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload>
          }
          deleteMany: {
            args: Prisma.AtestoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AtestoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AtestoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload>[]
          }
          upsert: {
            args: Prisma.AtestoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AtestoPayload>
          }
          aggregate: {
            args: Prisma.AtestoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAtesto>
          }
          groupBy: {
            args: Prisma.AtestoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AtestoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AtestoCountArgs<ExtArgs>
            result: $Utils.Optional<AtestoCountAggregateOutputType> | number
          }
        }
      }
      Fatura: {
        payload: Prisma.$FaturaPayload<ExtArgs>
        fields: Prisma.FaturaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FaturaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FaturaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload>
          }
          findFirst: {
            args: Prisma.FaturaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FaturaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload>
          }
          findMany: {
            args: Prisma.FaturaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload>[]
          }
          create: {
            args: Prisma.FaturaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload>
          }
          createMany: {
            args: Prisma.FaturaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FaturaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload>[]
          }
          delete: {
            args: Prisma.FaturaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload>
          }
          update: {
            args: Prisma.FaturaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload>
          }
          deleteMany: {
            args: Prisma.FaturaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FaturaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FaturaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload>[]
          }
          upsert: {
            args: Prisma.FaturaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaturaPayload>
          }
          aggregate: {
            args: Prisma.FaturaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFatura>
          }
          groupBy: {
            args: Prisma.FaturaGroupByArgs<ExtArgs>
            result: $Utils.Optional<FaturaGroupByOutputType>[]
          }
          count: {
            args: Prisma.FaturaCountArgs<ExtArgs>
            result: $Utils.Optional<FaturaCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Despesa: {
        payload: Prisma.$DespesaPayload<ExtArgs>
        fields: Prisma.DespesaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DespesaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DespesaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          findFirst: {
            args: Prisma.DespesaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DespesaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          findMany: {
            args: Prisma.DespesaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>[]
          }
          create: {
            args: Prisma.DespesaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          createMany: {
            args: Prisma.DespesaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DespesaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>[]
          }
          delete: {
            args: Prisma.DespesaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          update: {
            args: Prisma.DespesaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          deleteMany: {
            args: Prisma.DespesaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DespesaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DespesaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>[]
          }
          upsert: {
            args: Prisma.DespesaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DespesaPayload>
          }
          aggregate: {
            args: Prisma.DespesaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDespesa>
          }
          groupBy: {
            args: Prisma.DespesaGroupByArgs<ExtArgs>
            result: $Utils.Optional<DespesaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DespesaCountArgs<ExtArgs>
            result: $Utils.Optional<DespesaCountAggregateOutputType> | number
          }
        }
      }
      CentroCusto: {
        payload: Prisma.$CentroCustoPayload<ExtArgs>
        fields: Prisma.CentroCustoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CentroCustoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CentroCustoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload>
          }
          findFirst: {
            args: Prisma.CentroCustoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CentroCustoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload>
          }
          findMany: {
            args: Prisma.CentroCustoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload>[]
          }
          create: {
            args: Prisma.CentroCustoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload>
          }
          createMany: {
            args: Prisma.CentroCustoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CentroCustoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload>[]
          }
          delete: {
            args: Prisma.CentroCustoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload>
          }
          update: {
            args: Prisma.CentroCustoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload>
          }
          deleteMany: {
            args: Prisma.CentroCustoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CentroCustoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CentroCustoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload>[]
          }
          upsert: {
            args: Prisma.CentroCustoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CentroCustoPayload>
          }
          aggregate: {
            args: Prisma.CentroCustoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCentroCusto>
          }
          groupBy: {
            args: Prisma.CentroCustoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CentroCustoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CentroCustoCountArgs<ExtArgs>
            result: $Utils.Optional<CentroCustoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    cliente?: ClienteOmit
    transporte?: TransporteOmit
    atesto?: AtestoOmit
    fatura?: FaturaOmit
    usuario?: UsuarioOmit
    despesa?: DespesaOmit
    centroCusto?: CentroCustoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ClienteCountOutputType
   */

  export type ClienteCountOutputType = {
    transportes: number
  }

  export type ClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transportes?: boolean | ClienteCountOutputTypeCountTransportesArgs
  }

  // Custom InputTypes
  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteCountOutputType
     */
    select?: ClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountTransportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransporteWhereInput
  }


  /**
   * Count Type TransporteCountOutputType
   */

  export type TransporteCountOutputType = {
    atestos: number
    faturas: number
  }

  export type TransporteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    atestos?: boolean | TransporteCountOutputTypeCountAtestosArgs
    faturas?: boolean | TransporteCountOutputTypeCountFaturasArgs
  }

  // Custom InputTypes
  /**
   * TransporteCountOutputType without action
   */
  export type TransporteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransporteCountOutputType
     */
    select?: TransporteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TransporteCountOutputType without action
   */
  export type TransporteCountOutputTypeCountAtestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtestoWhereInput
  }

  /**
   * TransporteCountOutputType without action
   */
  export type TransporteCountOutputTypeCountFaturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FaturaWhereInput
  }


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    atestos: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    atestos?: boolean | UsuarioCountOutputTypeCountAtestosArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountAtestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtestoWhereInput
  }


  /**
   * Count Type CentroCustoCountOutputType
   */

  export type CentroCustoCountOutputType = {
    despesas: number
  }

  export type CentroCustoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    despesas?: boolean | CentroCustoCountOutputTypeCountDespesasArgs
  }

  // Custom InputTypes
  /**
   * CentroCustoCountOutputType without action
   */
  export type CentroCustoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCustoCountOutputType
     */
    select?: CentroCustoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CentroCustoCountOutputType without action
   */
  export type CentroCustoCountOutputTypeCountDespesasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DespesaWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    id: number | null
  }

  export type ClienteSumAggregateOutputType = {
    id: number | null
  }

  export type ClienteMinAggregateOutputType = {
    id: number | null
    nome: string | null
    cnpjCpf: string | null
    tipo: $Enums.TipoCliente | null
    email: string | null
    telefone: string | null
    endereco: string | null
    ativo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClienteMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    cnpjCpf: string | null
    tipo: $Enums.TipoCliente | null
    email: string | null
    telefone: string | null
    endereco: string | null
    ativo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClienteCountAggregateOutputType = {
    id: number
    nome: number
    cnpjCpf: number
    tipo: number
    email: number
    telefone: number
    endereco: number
    ativo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    id?: true
  }

  export type ClienteSumAggregateInputType = {
    id?: true
  }

  export type ClienteMinAggregateInputType = {
    id?: true
    nome?: true
    cnpjCpf?: true
    tipo?: true
    email?: true
    telefone?: true
    endereco?: true
    ativo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClienteMaxAggregateInputType = {
    id?: true
    nome?: true
    cnpjCpf?: true
    tipo?: true
    email?: true
    telefone?: true
    endereco?: true
    ativo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClienteCountAggregateInputType = {
    id?: true
    nome?: true
    cnpjCpf?: true
    tipo?: true
    email?: true
    telefone?: true
    endereco?: true
    ativo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cliente to aggregate.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type ClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithAggregationInput | ClienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: ClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    id: number
    nome: string
    cnpjCpf: string | null
    tipo: $Enums.TipoCliente
    email: string | null
    telefone: string | null
    endereco: string | null
    ativo: boolean
    createdAt: Date
    updatedAt: Date
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends ClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type ClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    cnpjCpf?: boolean
    tipo?: boolean
    email?: boolean
    telefone?: boolean
    endereco?: boolean
    ativo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transportes?: boolean | Cliente$transportesArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    cnpjCpf?: boolean
    tipo?: boolean
    email?: boolean
    telefone?: boolean
    endereco?: boolean
    ativo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    cnpjCpf?: boolean
    tipo?: boolean
    email?: boolean
    telefone?: boolean
    endereco?: boolean
    ativo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectScalar = {
    id?: boolean
    nome?: boolean
    cnpjCpf?: boolean
    tipo?: boolean
    email?: boolean
    telefone?: boolean
    endereco?: boolean
    ativo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ClienteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "cnpjCpf" | "tipo" | "email" | "telefone" | "endereco" | "ativo" | "createdAt" | "updatedAt", ExtArgs["result"]["cliente"]>
  export type ClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transportes?: boolean | Cliente$transportesArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ClienteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cliente"
    objects: {
      transportes: Prisma.$TransportePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      cnpjCpf: string | null
      tipo: $Enums.TipoCliente
      email: string | null
      telefone: string | null
      endereco: string | null
      ativo: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type ClienteGetPayload<S extends boolean | null | undefined | ClienteDefaultArgs> = $Result.GetResult<Prisma.$ClientePayload, S>

  type ClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface ClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cliente'], meta: { name: 'Cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {ClienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClienteFindUniqueArgs>(args: SelectSubset<T, ClienteFindUniqueArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, ClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClienteFindFirstArgs>(args?: SelectSubset<T, ClienteFindFirstArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, ClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clienteWithIdOnly = await prisma.cliente.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClienteFindManyArgs>(args?: SelectSubset<T, ClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cliente.
     * @param {ClienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends ClienteCreateArgs>(args: SelectSubset<T, ClienteCreateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clientes.
     * @param {ClienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClienteCreateManyArgs>(args?: SelectSubset<T, ClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {ClienteCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `id`
     * const clienteWithIdOnly = await prisma.cliente.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClienteCreateManyAndReturnArgs>(args?: SelectSubset<T, ClienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cliente.
     * @param {ClienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends ClienteDeleteArgs>(args: SelectSubset<T, ClienteDeleteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cliente.
     * @param {ClienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClienteUpdateArgs>(args: SelectSubset<T, ClienteUpdateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clientes.
     * @param {ClienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClienteDeleteManyArgs>(args?: SelectSubset<T, ClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClienteUpdateManyArgs>(args: SelectSubset<T, ClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes and returns the data updated in the database.
     * @param {ClienteUpdateManyAndReturnArgs} args - Arguments to update many Clientes.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clientes and only return the `id`
     * const clienteWithIdOnly = await prisma.cliente.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClienteUpdateManyAndReturnArgs>(args: SelectSubset<T, ClienteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cliente.
     * @param {ClienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends ClienteUpsertArgs>(args: SelectSubset<T, ClienteUpsertArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClienteCountArgs>(
      args?: Subset<T, ClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteGroupByArgs['orderBy'] }
        : { orderBy?: ClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cliente model
   */
  readonly fields: ClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transportes<T extends Cliente$transportesArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$transportesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cliente model
   */
  interface ClienteFieldRefs {
    readonly id: FieldRef<"Cliente", 'Int'>
    readonly nome: FieldRef<"Cliente", 'String'>
    readonly cnpjCpf: FieldRef<"Cliente", 'String'>
    readonly tipo: FieldRef<"Cliente", 'TipoCliente'>
    readonly email: FieldRef<"Cliente", 'String'>
    readonly telefone: FieldRef<"Cliente", 'String'>
    readonly endereco: FieldRef<"Cliente", 'String'>
    readonly ativo: FieldRef<"Cliente", 'Boolean'>
    readonly createdAt: FieldRef<"Cliente", 'DateTime'>
    readonly updatedAt: FieldRef<"Cliente", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Cliente findUnique
   */
  export type ClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findUniqueOrThrow
   */
  export type ClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findFirst
   */
  export type ClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findFirstOrThrow
   */
  export type ClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findMany
   */
  export type ClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente create
   */
  export type ClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a Cliente.
     */
    data: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
  }

  /**
   * Cliente createMany
   */
  export type ClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cliente createManyAndReturn
   */
  export type ClienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cliente update
   */
  export type ClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a Cliente.
     */
    data: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
    /**
     * Choose, which Cliente to update.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente updateMany
   */
  export type ClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
  }

  /**
   * Cliente updateManyAndReturn
   */
  export type ClienteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
  }

  /**
   * Cliente upsert
   */
  export type ClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the Cliente to update in case it exists.
     */
    where: ClienteWhereUniqueInput
    /**
     * In case the Cliente found by the `where` argument doesn't exist, create a new Cliente with this data.
     */
    create: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
    /**
     * In case the Cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
  }

  /**
   * Cliente delete
   */
  export type ClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter which Cliente to delete.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente deleteMany
   */
  export type ClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to delete.
     */
    limit?: number
  }

  /**
   * Cliente.transportes
   */
  export type Cliente$transportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
    where?: TransporteWhereInput
    orderBy?: TransporteOrderByWithRelationInput | TransporteOrderByWithRelationInput[]
    cursor?: TransporteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransporteScalarFieldEnum | TransporteScalarFieldEnum[]
  }

  /**
   * Cliente without action
   */
  export type ClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
  }


  /**
   * Model Transporte
   */

  export type AggregateTransporte = {
    _count: TransporteCountAggregateOutputType | null
    _avg: TransporteAvgAggregateOutputType | null
    _sum: TransporteSumAggregateOutputType | null
    _min: TransporteMinAggregateOutputType | null
    _max: TransporteMaxAggregateOutputType | null
  }

  export type TransporteAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
    valorTotal: Decimal | null
  }

  export type TransporteSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
    valorTotal: Decimal | null
  }

  export type TransporteMinAggregateOutputType = {
    id: number | null
    clienteId: number | null
    numeroCteOc: string | null
    dataOperacao: Date | null
    valorTotal: Decimal | null
    dataEnvioFaturamento: Date | null
    dataVencimento: Date | null
    dataAtesto: Date | null
    dataNotaFiscal: Date | null
    descricaoNotaFiscal: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TransporteMaxAggregateOutputType = {
    id: number | null
    clienteId: number | null
    numeroCteOc: string | null
    dataOperacao: Date | null
    valorTotal: Decimal | null
    dataEnvioFaturamento: Date | null
    dataVencimento: Date | null
    dataAtesto: Date | null
    dataNotaFiscal: Date | null
    descricaoNotaFiscal: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TransporteCountAggregateOutputType = {
    id: number
    clienteId: number
    numeroCteOc: number
    dataOperacao: number
    valorTotal: number
    dataEnvioFaturamento: number
    dataVencimento: number
    dataAtesto: number
    dataNotaFiscal: number
    descricaoNotaFiscal: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TransporteAvgAggregateInputType = {
    id?: true
    clienteId?: true
    valorTotal?: true
  }

  export type TransporteSumAggregateInputType = {
    id?: true
    clienteId?: true
    valorTotal?: true
  }

  export type TransporteMinAggregateInputType = {
    id?: true
    clienteId?: true
    numeroCteOc?: true
    dataOperacao?: true
    valorTotal?: true
    dataEnvioFaturamento?: true
    dataVencimento?: true
    dataAtesto?: true
    dataNotaFiscal?: true
    descricaoNotaFiscal?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TransporteMaxAggregateInputType = {
    id?: true
    clienteId?: true
    numeroCteOc?: true
    dataOperacao?: true
    valorTotal?: true
    dataEnvioFaturamento?: true
    dataVencimento?: true
    dataAtesto?: true
    dataNotaFiscal?: true
    descricaoNotaFiscal?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TransporteCountAggregateInputType = {
    id?: true
    clienteId?: true
    numeroCteOc?: true
    dataOperacao?: true
    valorTotal?: true
    dataEnvioFaturamento?: true
    dataVencimento?: true
    dataAtesto?: true
    dataNotaFiscal?: true
    descricaoNotaFiscal?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TransporteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transporte to aggregate.
     */
    where?: TransporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transportes to fetch.
     */
    orderBy?: TransporteOrderByWithRelationInput | TransporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transportes
    **/
    _count?: true | TransporteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransporteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransporteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransporteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransporteMaxAggregateInputType
  }

  export type GetTransporteAggregateType<T extends TransporteAggregateArgs> = {
        [P in keyof T & keyof AggregateTransporte]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransporte[P]>
      : GetScalarType<T[P], AggregateTransporte[P]>
  }




  export type TransporteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransporteWhereInput
    orderBy?: TransporteOrderByWithAggregationInput | TransporteOrderByWithAggregationInput[]
    by: TransporteScalarFieldEnum[] | TransporteScalarFieldEnum
    having?: TransporteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransporteCountAggregateInputType | true
    _avg?: TransporteAvgAggregateInputType
    _sum?: TransporteSumAggregateInputType
    _min?: TransporteMinAggregateInputType
    _max?: TransporteMaxAggregateInputType
  }

  export type TransporteGroupByOutputType = {
    id: number
    clienteId: number
    numeroCteOc: string
    dataOperacao: Date
    valorTotal: Decimal
    dataEnvioFaturamento: Date | null
    dataVencimento: Date | null
    dataAtesto: Date | null
    dataNotaFiscal: Date | null
    descricaoNotaFiscal: string | null
    createdAt: Date
    updatedAt: Date
    _count: TransporteCountAggregateOutputType | null
    _avg: TransporteAvgAggregateOutputType | null
    _sum: TransporteSumAggregateOutputType | null
    _min: TransporteMinAggregateOutputType | null
    _max: TransporteMaxAggregateOutputType | null
  }

  type GetTransporteGroupByPayload<T extends TransporteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransporteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransporteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransporteGroupByOutputType[P]>
            : GetScalarType<T[P], TransporteGroupByOutputType[P]>
        }
      >
    >


  export type TransporteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    numeroCteOc?: boolean
    dataOperacao?: boolean
    valorTotal?: boolean
    dataEnvioFaturamento?: boolean
    dataVencimento?: boolean
    dataAtesto?: boolean
    dataNotaFiscal?: boolean
    descricaoNotaFiscal?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    atestos?: boolean | Transporte$atestosArgs<ExtArgs>
    faturas?: boolean | Transporte$faturasArgs<ExtArgs>
    _count?: boolean | TransporteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transporte"]>

  export type TransporteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    numeroCteOc?: boolean
    dataOperacao?: boolean
    valorTotal?: boolean
    dataEnvioFaturamento?: boolean
    dataVencimento?: boolean
    dataAtesto?: boolean
    dataNotaFiscal?: boolean
    descricaoNotaFiscal?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transporte"]>

  export type TransporteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    numeroCteOc?: boolean
    dataOperacao?: boolean
    valorTotal?: boolean
    dataEnvioFaturamento?: boolean
    dataVencimento?: boolean
    dataAtesto?: boolean
    dataNotaFiscal?: boolean
    descricaoNotaFiscal?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transporte"]>

  export type TransporteSelectScalar = {
    id?: boolean
    clienteId?: boolean
    numeroCteOc?: boolean
    dataOperacao?: boolean
    valorTotal?: boolean
    dataEnvioFaturamento?: boolean
    dataVencimento?: boolean
    dataAtesto?: boolean
    dataNotaFiscal?: boolean
    descricaoNotaFiscal?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TransporteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clienteId" | "numeroCteOc" | "dataOperacao" | "valorTotal" | "dataEnvioFaturamento" | "dataVencimento" | "dataAtesto" | "dataNotaFiscal" | "descricaoNotaFiscal" | "createdAt" | "updatedAt", ExtArgs["result"]["transporte"]>
  export type TransporteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    atestos?: boolean | Transporte$atestosArgs<ExtArgs>
    faturas?: boolean | Transporte$faturasArgs<ExtArgs>
    _count?: boolean | TransporteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TransporteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }
  export type TransporteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }

  export type $TransportePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transporte"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
      atestos: Prisma.$AtestoPayload<ExtArgs>[]
      faturas: Prisma.$FaturaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clienteId: number
      numeroCteOc: string
      dataOperacao: Date
      valorTotal: Prisma.Decimal
      dataEnvioFaturamento: Date | null
      dataVencimento: Date | null
      dataAtesto: Date | null
      dataNotaFiscal: Date | null
      descricaoNotaFiscal: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["transporte"]>
    composites: {}
  }

  type TransporteGetPayload<S extends boolean | null | undefined | TransporteDefaultArgs> = $Result.GetResult<Prisma.$TransportePayload, S>

  type TransporteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransporteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransporteCountAggregateInputType | true
    }

  export interface TransporteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transporte'], meta: { name: 'Transporte' } }
    /**
     * Find zero or one Transporte that matches the filter.
     * @param {TransporteFindUniqueArgs} args - Arguments to find a Transporte
     * @example
     * // Get one Transporte
     * const transporte = await prisma.transporte.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransporteFindUniqueArgs>(args: SelectSubset<T, TransporteFindUniqueArgs<ExtArgs>>): Prisma__TransporteClient<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transporte that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransporteFindUniqueOrThrowArgs} args - Arguments to find a Transporte
     * @example
     * // Get one Transporte
     * const transporte = await prisma.transporte.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransporteFindUniqueOrThrowArgs>(args: SelectSubset<T, TransporteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransporteClient<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transporte that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransporteFindFirstArgs} args - Arguments to find a Transporte
     * @example
     * // Get one Transporte
     * const transporte = await prisma.transporte.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransporteFindFirstArgs>(args?: SelectSubset<T, TransporteFindFirstArgs<ExtArgs>>): Prisma__TransporteClient<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transporte that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransporteFindFirstOrThrowArgs} args - Arguments to find a Transporte
     * @example
     * // Get one Transporte
     * const transporte = await prisma.transporte.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransporteFindFirstOrThrowArgs>(args?: SelectSubset<T, TransporteFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransporteClient<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transportes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransporteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transportes
     * const transportes = await prisma.transporte.findMany()
     * 
     * // Get first 10 Transportes
     * const transportes = await prisma.transporte.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transporteWithIdOnly = await prisma.transporte.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransporteFindManyArgs>(args?: SelectSubset<T, TransporteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transporte.
     * @param {TransporteCreateArgs} args - Arguments to create a Transporte.
     * @example
     * // Create one Transporte
     * const Transporte = await prisma.transporte.create({
     *   data: {
     *     // ... data to create a Transporte
     *   }
     * })
     * 
     */
    create<T extends TransporteCreateArgs>(args: SelectSubset<T, TransporteCreateArgs<ExtArgs>>): Prisma__TransporteClient<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transportes.
     * @param {TransporteCreateManyArgs} args - Arguments to create many Transportes.
     * @example
     * // Create many Transportes
     * const transporte = await prisma.transporte.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransporteCreateManyArgs>(args?: SelectSubset<T, TransporteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transportes and returns the data saved in the database.
     * @param {TransporteCreateManyAndReturnArgs} args - Arguments to create many Transportes.
     * @example
     * // Create many Transportes
     * const transporte = await prisma.transporte.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transportes and only return the `id`
     * const transporteWithIdOnly = await prisma.transporte.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransporteCreateManyAndReturnArgs>(args?: SelectSubset<T, TransporteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transporte.
     * @param {TransporteDeleteArgs} args - Arguments to delete one Transporte.
     * @example
     * // Delete one Transporte
     * const Transporte = await prisma.transporte.delete({
     *   where: {
     *     // ... filter to delete one Transporte
     *   }
     * })
     * 
     */
    delete<T extends TransporteDeleteArgs>(args: SelectSubset<T, TransporteDeleteArgs<ExtArgs>>): Prisma__TransporteClient<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transporte.
     * @param {TransporteUpdateArgs} args - Arguments to update one Transporte.
     * @example
     * // Update one Transporte
     * const transporte = await prisma.transporte.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransporteUpdateArgs>(args: SelectSubset<T, TransporteUpdateArgs<ExtArgs>>): Prisma__TransporteClient<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transportes.
     * @param {TransporteDeleteManyArgs} args - Arguments to filter Transportes to delete.
     * @example
     * // Delete a few Transportes
     * const { count } = await prisma.transporte.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransporteDeleteManyArgs>(args?: SelectSubset<T, TransporteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransporteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transportes
     * const transporte = await prisma.transporte.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransporteUpdateManyArgs>(args: SelectSubset<T, TransporteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transportes and returns the data updated in the database.
     * @param {TransporteUpdateManyAndReturnArgs} args - Arguments to update many Transportes.
     * @example
     * // Update many Transportes
     * const transporte = await prisma.transporte.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transportes and only return the `id`
     * const transporteWithIdOnly = await prisma.transporte.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransporteUpdateManyAndReturnArgs>(args: SelectSubset<T, TransporteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transporte.
     * @param {TransporteUpsertArgs} args - Arguments to update or create a Transporte.
     * @example
     * // Update or create a Transporte
     * const transporte = await prisma.transporte.upsert({
     *   create: {
     *     // ... data to create a Transporte
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transporte we want to update
     *   }
     * })
     */
    upsert<T extends TransporteUpsertArgs>(args: SelectSubset<T, TransporteUpsertArgs<ExtArgs>>): Prisma__TransporteClient<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransporteCountArgs} args - Arguments to filter Transportes to count.
     * @example
     * // Count the number of Transportes
     * const count = await prisma.transporte.count({
     *   where: {
     *     // ... the filter for the Transportes we want to count
     *   }
     * })
    **/
    count<T extends TransporteCountArgs>(
      args?: Subset<T, TransporteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransporteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transporte.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransporteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransporteAggregateArgs>(args: Subset<T, TransporteAggregateArgs>): Prisma.PrismaPromise<GetTransporteAggregateType<T>>

    /**
     * Group by Transporte.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransporteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransporteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransporteGroupByArgs['orderBy'] }
        : { orderBy?: TransporteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransporteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransporteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transporte model
   */
  readonly fields: TransporteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transporte.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransporteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    atestos<T extends Transporte$atestosArgs<ExtArgs> = {}>(args?: Subset<T, Transporte$atestosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    faturas<T extends Transporte$faturasArgs<ExtArgs> = {}>(args?: Subset<T, Transporte$faturasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transporte model
   */
  interface TransporteFieldRefs {
    readonly id: FieldRef<"Transporte", 'Int'>
    readonly clienteId: FieldRef<"Transporte", 'Int'>
    readonly numeroCteOc: FieldRef<"Transporte", 'String'>
    readonly dataOperacao: FieldRef<"Transporte", 'DateTime'>
    readonly valorTotal: FieldRef<"Transporte", 'Decimal'>
    readonly dataEnvioFaturamento: FieldRef<"Transporte", 'DateTime'>
    readonly dataVencimento: FieldRef<"Transporte", 'DateTime'>
    readonly dataAtesto: FieldRef<"Transporte", 'DateTime'>
    readonly dataNotaFiscal: FieldRef<"Transporte", 'DateTime'>
    readonly descricaoNotaFiscal: FieldRef<"Transporte", 'String'>
    readonly createdAt: FieldRef<"Transporte", 'DateTime'>
    readonly updatedAt: FieldRef<"Transporte", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Transporte findUnique
   */
  export type TransporteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
    /**
     * Filter, which Transporte to fetch.
     */
    where: TransporteWhereUniqueInput
  }

  /**
   * Transporte findUniqueOrThrow
   */
  export type TransporteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
    /**
     * Filter, which Transporte to fetch.
     */
    where: TransporteWhereUniqueInput
  }

  /**
   * Transporte findFirst
   */
  export type TransporteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
    /**
     * Filter, which Transporte to fetch.
     */
    where?: TransporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transportes to fetch.
     */
    orderBy?: TransporteOrderByWithRelationInput | TransporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transportes.
     */
    cursor?: TransporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transportes.
     */
    distinct?: TransporteScalarFieldEnum | TransporteScalarFieldEnum[]
  }

  /**
   * Transporte findFirstOrThrow
   */
  export type TransporteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
    /**
     * Filter, which Transporte to fetch.
     */
    where?: TransporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transportes to fetch.
     */
    orderBy?: TransporteOrderByWithRelationInput | TransporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transportes.
     */
    cursor?: TransporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transportes.
     */
    distinct?: TransporteScalarFieldEnum | TransporteScalarFieldEnum[]
  }

  /**
   * Transporte findMany
   */
  export type TransporteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
    /**
     * Filter, which Transportes to fetch.
     */
    where?: TransporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transportes to fetch.
     */
    orderBy?: TransporteOrderByWithRelationInput | TransporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transportes.
     */
    cursor?: TransporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transportes.
     */
    skip?: number
    distinct?: TransporteScalarFieldEnum | TransporteScalarFieldEnum[]
  }

  /**
   * Transporte create
   */
  export type TransporteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
    /**
     * The data needed to create a Transporte.
     */
    data: XOR<TransporteCreateInput, TransporteUncheckedCreateInput>
  }

  /**
   * Transporte createMany
   */
  export type TransporteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transportes.
     */
    data: TransporteCreateManyInput | TransporteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transporte createManyAndReturn
   */
  export type TransporteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * The data used to create many Transportes.
     */
    data: TransporteCreateManyInput | TransporteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transporte update
   */
  export type TransporteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
    /**
     * The data needed to update a Transporte.
     */
    data: XOR<TransporteUpdateInput, TransporteUncheckedUpdateInput>
    /**
     * Choose, which Transporte to update.
     */
    where: TransporteWhereUniqueInput
  }

  /**
   * Transporte updateMany
   */
  export type TransporteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transportes.
     */
    data: XOR<TransporteUpdateManyMutationInput, TransporteUncheckedUpdateManyInput>
    /**
     * Filter which Transportes to update
     */
    where?: TransporteWhereInput
    /**
     * Limit how many Transportes to update.
     */
    limit?: number
  }

  /**
   * Transporte updateManyAndReturn
   */
  export type TransporteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * The data used to update Transportes.
     */
    data: XOR<TransporteUpdateManyMutationInput, TransporteUncheckedUpdateManyInput>
    /**
     * Filter which Transportes to update
     */
    where?: TransporteWhereInput
    /**
     * Limit how many Transportes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transporte upsert
   */
  export type TransporteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
    /**
     * The filter to search for the Transporte to update in case it exists.
     */
    where: TransporteWhereUniqueInput
    /**
     * In case the Transporte found by the `where` argument doesn't exist, create a new Transporte with this data.
     */
    create: XOR<TransporteCreateInput, TransporteUncheckedCreateInput>
    /**
     * In case the Transporte was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransporteUpdateInput, TransporteUncheckedUpdateInput>
  }

  /**
   * Transporte delete
   */
  export type TransporteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
    /**
     * Filter which Transporte to delete.
     */
    where: TransporteWhereUniqueInput
  }

  /**
   * Transporte deleteMany
   */
  export type TransporteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transportes to delete
     */
    where?: TransporteWhereInput
    /**
     * Limit how many Transportes to delete.
     */
    limit?: number
  }

  /**
   * Transporte.atestos
   */
  export type Transporte$atestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    where?: AtestoWhereInput
    orderBy?: AtestoOrderByWithRelationInput | AtestoOrderByWithRelationInput[]
    cursor?: AtestoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtestoScalarFieldEnum | AtestoScalarFieldEnum[]
  }

  /**
   * Transporte.faturas
   */
  export type Transporte$faturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
    where?: FaturaWhereInput
    orderBy?: FaturaOrderByWithRelationInput | FaturaOrderByWithRelationInput[]
    cursor?: FaturaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FaturaScalarFieldEnum | FaturaScalarFieldEnum[]
  }

  /**
   * Transporte without action
   */
  export type TransporteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transporte
     */
    select?: TransporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transporte
     */
    omit?: TransporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransporteInclude<ExtArgs> | null
  }


  /**
   * Model Atesto
   */

  export type AggregateAtesto = {
    _count: AtestoCountAggregateOutputType | null
    _avg: AtestoAvgAggregateOutputType | null
    _sum: AtestoSumAggregateOutputType | null
    _min: AtestoMinAggregateOutputType | null
    _max: AtestoMaxAggregateOutputType | null
  }

  export type AtestoAvgAggregateOutputType = {
    id: number | null
    transporteId: number | null
    usuarioId: number | null
  }

  export type AtestoSumAggregateOutputType = {
    id: number | null
    transporteId: number | null
    usuarioId: number | null
  }

  export type AtestoMinAggregateOutputType = {
    id: number | null
    transporteId: number | null
    dataAtesto: Date | null
    tipo: $Enums.TipoAtesto | null
    observacao: string | null
    usuarioId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AtestoMaxAggregateOutputType = {
    id: number | null
    transporteId: number | null
    dataAtesto: Date | null
    tipo: $Enums.TipoAtesto | null
    observacao: string | null
    usuarioId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AtestoCountAggregateOutputType = {
    id: number
    transporteId: number
    dataAtesto: number
    tipo: number
    observacao: number
    usuarioId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AtestoAvgAggregateInputType = {
    id?: true
    transporteId?: true
    usuarioId?: true
  }

  export type AtestoSumAggregateInputType = {
    id?: true
    transporteId?: true
    usuarioId?: true
  }

  export type AtestoMinAggregateInputType = {
    id?: true
    transporteId?: true
    dataAtesto?: true
    tipo?: true
    observacao?: true
    usuarioId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AtestoMaxAggregateInputType = {
    id?: true
    transporteId?: true
    dataAtesto?: true
    tipo?: true
    observacao?: true
    usuarioId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AtestoCountAggregateInputType = {
    id?: true
    transporteId?: true
    dataAtesto?: true
    tipo?: true
    observacao?: true
    usuarioId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AtestoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Atesto to aggregate.
     */
    where?: AtestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Atestos to fetch.
     */
    orderBy?: AtestoOrderByWithRelationInput | AtestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AtestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Atestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Atestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Atestos
    **/
    _count?: true | AtestoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AtestoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AtestoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AtestoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AtestoMaxAggregateInputType
  }

  export type GetAtestoAggregateType<T extends AtestoAggregateArgs> = {
        [P in keyof T & keyof AggregateAtesto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAtesto[P]>
      : GetScalarType<T[P], AggregateAtesto[P]>
  }




  export type AtestoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AtestoWhereInput
    orderBy?: AtestoOrderByWithAggregationInput | AtestoOrderByWithAggregationInput[]
    by: AtestoScalarFieldEnum[] | AtestoScalarFieldEnum
    having?: AtestoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AtestoCountAggregateInputType | true
    _avg?: AtestoAvgAggregateInputType
    _sum?: AtestoSumAggregateInputType
    _min?: AtestoMinAggregateInputType
    _max?: AtestoMaxAggregateInputType
  }

  export type AtestoGroupByOutputType = {
    id: number
    transporteId: number
    dataAtesto: Date
    tipo: $Enums.TipoAtesto
    observacao: string | null
    usuarioId: number | null
    createdAt: Date
    updatedAt: Date
    _count: AtestoCountAggregateOutputType | null
    _avg: AtestoAvgAggregateOutputType | null
    _sum: AtestoSumAggregateOutputType | null
    _min: AtestoMinAggregateOutputType | null
    _max: AtestoMaxAggregateOutputType | null
  }

  type GetAtestoGroupByPayload<T extends AtestoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AtestoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AtestoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AtestoGroupByOutputType[P]>
            : GetScalarType<T[P], AtestoGroupByOutputType[P]>
        }
      >
    >


  export type AtestoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transporteId?: boolean
    dataAtesto?: boolean
    tipo?: boolean
    observacao?: boolean
    usuarioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
    usuario?: boolean | Atesto$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["atesto"]>

  export type AtestoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transporteId?: boolean
    dataAtesto?: boolean
    tipo?: boolean
    observacao?: boolean
    usuarioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
    usuario?: boolean | Atesto$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["atesto"]>

  export type AtestoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transporteId?: boolean
    dataAtesto?: boolean
    tipo?: boolean
    observacao?: boolean
    usuarioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
    usuario?: boolean | Atesto$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["atesto"]>

  export type AtestoSelectScalar = {
    id?: boolean
    transporteId?: boolean
    dataAtesto?: boolean
    tipo?: boolean
    observacao?: boolean
    usuarioId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AtestoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "transporteId" | "dataAtesto" | "tipo" | "observacao" | "usuarioId" | "createdAt" | "updatedAt", ExtArgs["result"]["atesto"]>
  export type AtestoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
    usuario?: boolean | Atesto$usuarioArgs<ExtArgs>
  }
  export type AtestoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
    usuario?: boolean | Atesto$usuarioArgs<ExtArgs>
  }
  export type AtestoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
    usuario?: boolean | Atesto$usuarioArgs<ExtArgs>
  }

  export type $AtestoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Atesto"
    objects: {
      transporte: Prisma.$TransportePayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      transporteId: number
      dataAtesto: Date
      tipo: $Enums.TipoAtesto
      observacao: string | null
      usuarioId: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["atesto"]>
    composites: {}
  }

  type AtestoGetPayload<S extends boolean | null | undefined | AtestoDefaultArgs> = $Result.GetResult<Prisma.$AtestoPayload, S>

  type AtestoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AtestoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AtestoCountAggregateInputType | true
    }

  export interface AtestoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Atesto'], meta: { name: 'Atesto' } }
    /**
     * Find zero or one Atesto that matches the filter.
     * @param {AtestoFindUniqueArgs} args - Arguments to find a Atesto
     * @example
     * // Get one Atesto
     * const atesto = await prisma.atesto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AtestoFindUniqueArgs>(args: SelectSubset<T, AtestoFindUniqueArgs<ExtArgs>>): Prisma__AtestoClient<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Atesto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AtestoFindUniqueOrThrowArgs} args - Arguments to find a Atesto
     * @example
     * // Get one Atesto
     * const atesto = await prisma.atesto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AtestoFindUniqueOrThrowArgs>(args: SelectSubset<T, AtestoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AtestoClient<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Atesto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtestoFindFirstArgs} args - Arguments to find a Atesto
     * @example
     * // Get one Atesto
     * const atesto = await prisma.atesto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AtestoFindFirstArgs>(args?: SelectSubset<T, AtestoFindFirstArgs<ExtArgs>>): Prisma__AtestoClient<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Atesto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtestoFindFirstOrThrowArgs} args - Arguments to find a Atesto
     * @example
     * // Get one Atesto
     * const atesto = await prisma.atesto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AtestoFindFirstOrThrowArgs>(args?: SelectSubset<T, AtestoFindFirstOrThrowArgs<ExtArgs>>): Prisma__AtestoClient<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Atestos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtestoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Atestos
     * const atestos = await prisma.atesto.findMany()
     * 
     * // Get first 10 Atestos
     * const atestos = await prisma.atesto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const atestoWithIdOnly = await prisma.atesto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AtestoFindManyArgs>(args?: SelectSubset<T, AtestoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Atesto.
     * @param {AtestoCreateArgs} args - Arguments to create a Atesto.
     * @example
     * // Create one Atesto
     * const Atesto = await prisma.atesto.create({
     *   data: {
     *     // ... data to create a Atesto
     *   }
     * })
     * 
     */
    create<T extends AtestoCreateArgs>(args: SelectSubset<T, AtestoCreateArgs<ExtArgs>>): Prisma__AtestoClient<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Atestos.
     * @param {AtestoCreateManyArgs} args - Arguments to create many Atestos.
     * @example
     * // Create many Atestos
     * const atesto = await prisma.atesto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AtestoCreateManyArgs>(args?: SelectSubset<T, AtestoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Atestos and returns the data saved in the database.
     * @param {AtestoCreateManyAndReturnArgs} args - Arguments to create many Atestos.
     * @example
     * // Create many Atestos
     * const atesto = await prisma.atesto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Atestos and only return the `id`
     * const atestoWithIdOnly = await prisma.atesto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AtestoCreateManyAndReturnArgs>(args?: SelectSubset<T, AtestoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Atesto.
     * @param {AtestoDeleteArgs} args - Arguments to delete one Atesto.
     * @example
     * // Delete one Atesto
     * const Atesto = await prisma.atesto.delete({
     *   where: {
     *     // ... filter to delete one Atesto
     *   }
     * })
     * 
     */
    delete<T extends AtestoDeleteArgs>(args: SelectSubset<T, AtestoDeleteArgs<ExtArgs>>): Prisma__AtestoClient<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Atesto.
     * @param {AtestoUpdateArgs} args - Arguments to update one Atesto.
     * @example
     * // Update one Atesto
     * const atesto = await prisma.atesto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AtestoUpdateArgs>(args: SelectSubset<T, AtestoUpdateArgs<ExtArgs>>): Prisma__AtestoClient<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Atestos.
     * @param {AtestoDeleteManyArgs} args - Arguments to filter Atestos to delete.
     * @example
     * // Delete a few Atestos
     * const { count } = await prisma.atesto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AtestoDeleteManyArgs>(args?: SelectSubset<T, AtestoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Atestos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtestoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Atestos
     * const atesto = await prisma.atesto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AtestoUpdateManyArgs>(args: SelectSubset<T, AtestoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Atestos and returns the data updated in the database.
     * @param {AtestoUpdateManyAndReturnArgs} args - Arguments to update many Atestos.
     * @example
     * // Update many Atestos
     * const atesto = await prisma.atesto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Atestos and only return the `id`
     * const atestoWithIdOnly = await prisma.atesto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AtestoUpdateManyAndReturnArgs>(args: SelectSubset<T, AtestoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Atesto.
     * @param {AtestoUpsertArgs} args - Arguments to update or create a Atesto.
     * @example
     * // Update or create a Atesto
     * const atesto = await prisma.atesto.upsert({
     *   create: {
     *     // ... data to create a Atesto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Atesto we want to update
     *   }
     * })
     */
    upsert<T extends AtestoUpsertArgs>(args: SelectSubset<T, AtestoUpsertArgs<ExtArgs>>): Prisma__AtestoClient<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Atestos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtestoCountArgs} args - Arguments to filter Atestos to count.
     * @example
     * // Count the number of Atestos
     * const count = await prisma.atesto.count({
     *   where: {
     *     // ... the filter for the Atestos we want to count
     *   }
     * })
    **/
    count<T extends AtestoCountArgs>(
      args?: Subset<T, AtestoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AtestoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Atesto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtestoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AtestoAggregateArgs>(args: Subset<T, AtestoAggregateArgs>): Prisma.PrismaPromise<GetAtestoAggregateType<T>>

    /**
     * Group by Atesto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AtestoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AtestoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AtestoGroupByArgs['orderBy'] }
        : { orderBy?: AtestoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AtestoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAtestoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Atesto model
   */
  readonly fields: AtestoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Atesto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AtestoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transporte<T extends TransporteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TransporteDefaultArgs<ExtArgs>>): Prisma__TransporteClient<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends Atesto$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, Atesto$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Atesto model
   */
  interface AtestoFieldRefs {
    readonly id: FieldRef<"Atesto", 'Int'>
    readonly transporteId: FieldRef<"Atesto", 'Int'>
    readonly dataAtesto: FieldRef<"Atesto", 'DateTime'>
    readonly tipo: FieldRef<"Atesto", 'TipoAtesto'>
    readonly observacao: FieldRef<"Atesto", 'String'>
    readonly usuarioId: FieldRef<"Atesto", 'Int'>
    readonly createdAt: FieldRef<"Atesto", 'DateTime'>
    readonly updatedAt: FieldRef<"Atesto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Atesto findUnique
   */
  export type AtestoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    /**
     * Filter, which Atesto to fetch.
     */
    where: AtestoWhereUniqueInput
  }

  /**
   * Atesto findUniqueOrThrow
   */
  export type AtestoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    /**
     * Filter, which Atesto to fetch.
     */
    where: AtestoWhereUniqueInput
  }

  /**
   * Atesto findFirst
   */
  export type AtestoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    /**
     * Filter, which Atesto to fetch.
     */
    where?: AtestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Atestos to fetch.
     */
    orderBy?: AtestoOrderByWithRelationInput | AtestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Atestos.
     */
    cursor?: AtestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Atestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Atestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Atestos.
     */
    distinct?: AtestoScalarFieldEnum | AtestoScalarFieldEnum[]
  }

  /**
   * Atesto findFirstOrThrow
   */
  export type AtestoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    /**
     * Filter, which Atesto to fetch.
     */
    where?: AtestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Atestos to fetch.
     */
    orderBy?: AtestoOrderByWithRelationInput | AtestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Atestos.
     */
    cursor?: AtestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Atestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Atestos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Atestos.
     */
    distinct?: AtestoScalarFieldEnum | AtestoScalarFieldEnum[]
  }

  /**
   * Atesto findMany
   */
  export type AtestoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    /**
     * Filter, which Atestos to fetch.
     */
    where?: AtestoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Atestos to fetch.
     */
    orderBy?: AtestoOrderByWithRelationInput | AtestoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Atestos.
     */
    cursor?: AtestoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Atestos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Atestos.
     */
    skip?: number
    distinct?: AtestoScalarFieldEnum | AtestoScalarFieldEnum[]
  }

  /**
   * Atesto create
   */
  export type AtestoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    /**
     * The data needed to create a Atesto.
     */
    data: XOR<AtestoCreateInput, AtestoUncheckedCreateInput>
  }

  /**
   * Atesto createMany
   */
  export type AtestoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Atestos.
     */
    data: AtestoCreateManyInput | AtestoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Atesto createManyAndReturn
   */
  export type AtestoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * The data used to create many Atestos.
     */
    data: AtestoCreateManyInput | AtestoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Atesto update
   */
  export type AtestoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    /**
     * The data needed to update a Atesto.
     */
    data: XOR<AtestoUpdateInput, AtestoUncheckedUpdateInput>
    /**
     * Choose, which Atesto to update.
     */
    where: AtestoWhereUniqueInput
  }

  /**
   * Atesto updateMany
   */
  export type AtestoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Atestos.
     */
    data: XOR<AtestoUpdateManyMutationInput, AtestoUncheckedUpdateManyInput>
    /**
     * Filter which Atestos to update
     */
    where?: AtestoWhereInput
    /**
     * Limit how many Atestos to update.
     */
    limit?: number
  }

  /**
   * Atesto updateManyAndReturn
   */
  export type AtestoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * The data used to update Atestos.
     */
    data: XOR<AtestoUpdateManyMutationInput, AtestoUncheckedUpdateManyInput>
    /**
     * Filter which Atestos to update
     */
    where?: AtestoWhereInput
    /**
     * Limit how many Atestos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Atesto upsert
   */
  export type AtestoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    /**
     * The filter to search for the Atesto to update in case it exists.
     */
    where: AtestoWhereUniqueInput
    /**
     * In case the Atesto found by the `where` argument doesn't exist, create a new Atesto with this data.
     */
    create: XOR<AtestoCreateInput, AtestoUncheckedCreateInput>
    /**
     * In case the Atesto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AtestoUpdateInput, AtestoUncheckedUpdateInput>
  }

  /**
   * Atesto delete
   */
  export type AtestoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    /**
     * Filter which Atesto to delete.
     */
    where: AtestoWhereUniqueInput
  }

  /**
   * Atesto deleteMany
   */
  export type AtestoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Atestos to delete
     */
    where?: AtestoWhereInput
    /**
     * Limit how many Atestos to delete.
     */
    limit?: number
  }

  /**
   * Atesto.usuario
   */
  export type Atesto$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Atesto without action
   */
  export type AtestoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
  }


  /**
   * Model Fatura
   */

  export type AggregateFatura = {
    _count: FaturaCountAggregateOutputType | null
    _avg: FaturaAvgAggregateOutputType | null
    _sum: FaturaSumAggregateOutputType | null
    _min: FaturaMinAggregateOutputType | null
    _max: FaturaMaxAggregateOutputType | null
  }

  export type FaturaAvgAggregateOutputType = {
    id: number | null
    transporteId: number | null
    valor: Decimal | null
  }

  export type FaturaSumAggregateOutputType = {
    id: number | null
    transporteId: number | null
    valor: Decimal | null
  }

  export type FaturaMinAggregateOutputType = {
    id: number | null
    transporteId: number | null
    numeroFatura: string | null
    valor: Decimal | null
    dataEmissao: Date | null
    dataVencimento: Date | null
    status: $Enums.StatusFatura | null
    linkBoleto: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FaturaMaxAggregateOutputType = {
    id: number | null
    transporteId: number | null
    numeroFatura: string | null
    valor: Decimal | null
    dataEmissao: Date | null
    dataVencimento: Date | null
    status: $Enums.StatusFatura | null
    linkBoleto: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FaturaCountAggregateOutputType = {
    id: number
    transporteId: number
    numeroFatura: number
    valor: number
    dataEmissao: number
    dataVencimento: number
    status: number
    linkBoleto: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FaturaAvgAggregateInputType = {
    id?: true
    transporteId?: true
    valor?: true
  }

  export type FaturaSumAggregateInputType = {
    id?: true
    transporteId?: true
    valor?: true
  }

  export type FaturaMinAggregateInputType = {
    id?: true
    transporteId?: true
    numeroFatura?: true
    valor?: true
    dataEmissao?: true
    dataVencimento?: true
    status?: true
    linkBoleto?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FaturaMaxAggregateInputType = {
    id?: true
    transporteId?: true
    numeroFatura?: true
    valor?: true
    dataEmissao?: true
    dataVencimento?: true
    status?: true
    linkBoleto?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FaturaCountAggregateInputType = {
    id?: true
    transporteId?: true
    numeroFatura?: true
    valor?: true
    dataEmissao?: true
    dataVencimento?: true
    status?: true
    linkBoleto?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FaturaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Fatura to aggregate.
     */
    where?: FaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faturas to fetch.
     */
    orderBy?: FaturaOrderByWithRelationInput | FaturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Faturas
    **/
    _count?: true | FaturaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FaturaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FaturaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FaturaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FaturaMaxAggregateInputType
  }

  export type GetFaturaAggregateType<T extends FaturaAggregateArgs> = {
        [P in keyof T & keyof AggregateFatura]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFatura[P]>
      : GetScalarType<T[P], AggregateFatura[P]>
  }




  export type FaturaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FaturaWhereInput
    orderBy?: FaturaOrderByWithAggregationInput | FaturaOrderByWithAggregationInput[]
    by: FaturaScalarFieldEnum[] | FaturaScalarFieldEnum
    having?: FaturaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FaturaCountAggregateInputType | true
    _avg?: FaturaAvgAggregateInputType
    _sum?: FaturaSumAggregateInputType
    _min?: FaturaMinAggregateInputType
    _max?: FaturaMaxAggregateInputType
  }

  export type FaturaGroupByOutputType = {
    id: number
    transporteId: number
    numeroFatura: string
    valor: Decimal
    dataEmissao: Date
    dataVencimento: Date
    status: $Enums.StatusFatura
    linkBoleto: string | null
    createdAt: Date
    updatedAt: Date
    _count: FaturaCountAggregateOutputType | null
    _avg: FaturaAvgAggregateOutputType | null
    _sum: FaturaSumAggregateOutputType | null
    _min: FaturaMinAggregateOutputType | null
    _max: FaturaMaxAggregateOutputType | null
  }

  type GetFaturaGroupByPayload<T extends FaturaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FaturaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FaturaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FaturaGroupByOutputType[P]>
            : GetScalarType<T[P], FaturaGroupByOutputType[P]>
        }
      >
    >


  export type FaturaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transporteId?: boolean
    numeroFatura?: boolean
    valor?: boolean
    dataEmissao?: boolean
    dataVencimento?: boolean
    status?: boolean
    linkBoleto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fatura"]>

  export type FaturaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transporteId?: boolean
    numeroFatura?: boolean
    valor?: boolean
    dataEmissao?: boolean
    dataVencimento?: boolean
    status?: boolean
    linkBoleto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fatura"]>

  export type FaturaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transporteId?: boolean
    numeroFatura?: boolean
    valor?: boolean
    dataEmissao?: boolean
    dataVencimento?: boolean
    status?: boolean
    linkBoleto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["fatura"]>

  export type FaturaSelectScalar = {
    id?: boolean
    transporteId?: boolean
    numeroFatura?: boolean
    valor?: boolean
    dataEmissao?: boolean
    dataVencimento?: boolean
    status?: boolean
    linkBoleto?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FaturaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "transporteId" | "numeroFatura" | "valor" | "dataEmissao" | "dataVencimento" | "status" | "linkBoleto" | "createdAt" | "updatedAt", ExtArgs["result"]["fatura"]>
  export type FaturaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
  }
  export type FaturaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
  }
  export type FaturaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transporte?: boolean | TransporteDefaultArgs<ExtArgs>
  }

  export type $FaturaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Fatura"
    objects: {
      transporte: Prisma.$TransportePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      transporteId: number
      numeroFatura: string
      valor: Prisma.Decimal
      dataEmissao: Date
      dataVencimento: Date
      status: $Enums.StatusFatura
      linkBoleto: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["fatura"]>
    composites: {}
  }

  type FaturaGetPayload<S extends boolean | null | undefined | FaturaDefaultArgs> = $Result.GetResult<Prisma.$FaturaPayload, S>

  type FaturaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FaturaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FaturaCountAggregateInputType | true
    }

  export interface FaturaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Fatura'], meta: { name: 'Fatura' } }
    /**
     * Find zero or one Fatura that matches the filter.
     * @param {FaturaFindUniqueArgs} args - Arguments to find a Fatura
     * @example
     * // Get one Fatura
     * const fatura = await prisma.fatura.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FaturaFindUniqueArgs>(args: SelectSubset<T, FaturaFindUniqueArgs<ExtArgs>>): Prisma__FaturaClient<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Fatura that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FaturaFindUniqueOrThrowArgs} args - Arguments to find a Fatura
     * @example
     * // Get one Fatura
     * const fatura = await prisma.fatura.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FaturaFindUniqueOrThrowArgs>(args: SelectSubset<T, FaturaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FaturaClient<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fatura that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaturaFindFirstArgs} args - Arguments to find a Fatura
     * @example
     * // Get one Fatura
     * const fatura = await prisma.fatura.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FaturaFindFirstArgs>(args?: SelectSubset<T, FaturaFindFirstArgs<ExtArgs>>): Prisma__FaturaClient<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Fatura that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaturaFindFirstOrThrowArgs} args - Arguments to find a Fatura
     * @example
     * // Get one Fatura
     * const fatura = await prisma.fatura.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FaturaFindFirstOrThrowArgs>(args?: SelectSubset<T, FaturaFindFirstOrThrowArgs<ExtArgs>>): Prisma__FaturaClient<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Faturas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaturaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Faturas
     * const faturas = await prisma.fatura.findMany()
     * 
     * // Get first 10 Faturas
     * const faturas = await prisma.fatura.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const faturaWithIdOnly = await prisma.fatura.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FaturaFindManyArgs>(args?: SelectSubset<T, FaturaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Fatura.
     * @param {FaturaCreateArgs} args - Arguments to create a Fatura.
     * @example
     * // Create one Fatura
     * const Fatura = await prisma.fatura.create({
     *   data: {
     *     // ... data to create a Fatura
     *   }
     * })
     * 
     */
    create<T extends FaturaCreateArgs>(args: SelectSubset<T, FaturaCreateArgs<ExtArgs>>): Prisma__FaturaClient<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Faturas.
     * @param {FaturaCreateManyArgs} args - Arguments to create many Faturas.
     * @example
     * // Create many Faturas
     * const fatura = await prisma.fatura.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FaturaCreateManyArgs>(args?: SelectSubset<T, FaturaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Faturas and returns the data saved in the database.
     * @param {FaturaCreateManyAndReturnArgs} args - Arguments to create many Faturas.
     * @example
     * // Create many Faturas
     * const fatura = await prisma.fatura.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Faturas and only return the `id`
     * const faturaWithIdOnly = await prisma.fatura.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FaturaCreateManyAndReturnArgs>(args?: SelectSubset<T, FaturaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Fatura.
     * @param {FaturaDeleteArgs} args - Arguments to delete one Fatura.
     * @example
     * // Delete one Fatura
     * const Fatura = await prisma.fatura.delete({
     *   where: {
     *     // ... filter to delete one Fatura
     *   }
     * })
     * 
     */
    delete<T extends FaturaDeleteArgs>(args: SelectSubset<T, FaturaDeleteArgs<ExtArgs>>): Prisma__FaturaClient<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Fatura.
     * @param {FaturaUpdateArgs} args - Arguments to update one Fatura.
     * @example
     * // Update one Fatura
     * const fatura = await prisma.fatura.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FaturaUpdateArgs>(args: SelectSubset<T, FaturaUpdateArgs<ExtArgs>>): Prisma__FaturaClient<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Faturas.
     * @param {FaturaDeleteManyArgs} args - Arguments to filter Faturas to delete.
     * @example
     * // Delete a few Faturas
     * const { count } = await prisma.fatura.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FaturaDeleteManyArgs>(args?: SelectSubset<T, FaturaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Faturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaturaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Faturas
     * const fatura = await prisma.fatura.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FaturaUpdateManyArgs>(args: SelectSubset<T, FaturaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Faturas and returns the data updated in the database.
     * @param {FaturaUpdateManyAndReturnArgs} args - Arguments to update many Faturas.
     * @example
     * // Update many Faturas
     * const fatura = await prisma.fatura.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Faturas and only return the `id`
     * const faturaWithIdOnly = await prisma.fatura.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FaturaUpdateManyAndReturnArgs>(args: SelectSubset<T, FaturaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Fatura.
     * @param {FaturaUpsertArgs} args - Arguments to update or create a Fatura.
     * @example
     * // Update or create a Fatura
     * const fatura = await prisma.fatura.upsert({
     *   create: {
     *     // ... data to create a Fatura
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fatura we want to update
     *   }
     * })
     */
    upsert<T extends FaturaUpsertArgs>(args: SelectSubset<T, FaturaUpsertArgs<ExtArgs>>): Prisma__FaturaClient<$Result.GetResult<Prisma.$FaturaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Faturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaturaCountArgs} args - Arguments to filter Faturas to count.
     * @example
     * // Count the number of Faturas
     * const count = await prisma.fatura.count({
     *   where: {
     *     // ... the filter for the Faturas we want to count
     *   }
     * })
    **/
    count<T extends FaturaCountArgs>(
      args?: Subset<T, FaturaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FaturaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fatura.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaturaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FaturaAggregateArgs>(args: Subset<T, FaturaAggregateArgs>): Prisma.PrismaPromise<GetFaturaAggregateType<T>>

    /**
     * Group by Fatura.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaturaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FaturaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FaturaGroupByArgs['orderBy'] }
        : { orderBy?: FaturaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FaturaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFaturaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Fatura model
   */
  readonly fields: FaturaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Fatura.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FaturaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transporte<T extends TransporteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TransporteDefaultArgs<ExtArgs>>): Prisma__TransporteClient<$Result.GetResult<Prisma.$TransportePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Fatura model
   */
  interface FaturaFieldRefs {
    readonly id: FieldRef<"Fatura", 'Int'>
    readonly transporteId: FieldRef<"Fatura", 'Int'>
    readonly numeroFatura: FieldRef<"Fatura", 'String'>
    readonly valor: FieldRef<"Fatura", 'Decimal'>
    readonly dataEmissao: FieldRef<"Fatura", 'DateTime'>
    readonly dataVencimento: FieldRef<"Fatura", 'DateTime'>
    readonly status: FieldRef<"Fatura", 'StatusFatura'>
    readonly linkBoleto: FieldRef<"Fatura", 'String'>
    readonly createdAt: FieldRef<"Fatura", 'DateTime'>
    readonly updatedAt: FieldRef<"Fatura", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Fatura findUnique
   */
  export type FaturaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
    /**
     * Filter, which Fatura to fetch.
     */
    where: FaturaWhereUniqueInput
  }

  /**
   * Fatura findUniqueOrThrow
   */
  export type FaturaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
    /**
     * Filter, which Fatura to fetch.
     */
    where: FaturaWhereUniqueInput
  }

  /**
   * Fatura findFirst
   */
  export type FaturaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
    /**
     * Filter, which Fatura to fetch.
     */
    where?: FaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faturas to fetch.
     */
    orderBy?: FaturaOrderByWithRelationInput | FaturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Faturas.
     */
    cursor?: FaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Faturas.
     */
    distinct?: FaturaScalarFieldEnum | FaturaScalarFieldEnum[]
  }

  /**
   * Fatura findFirstOrThrow
   */
  export type FaturaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
    /**
     * Filter, which Fatura to fetch.
     */
    where?: FaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faturas to fetch.
     */
    orderBy?: FaturaOrderByWithRelationInput | FaturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Faturas.
     */
    cursor?: FaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Faturas.
     */
    distinct?: FaturaScalarFieldEnum | FaturaScalarFieldEnum[]
  }

  /**
   * Fatura findMany
   */
  export type FaturaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
    /**
     * Filter, which Faturas to fetch.
     */
    where?: FaturaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faturas to fetch.
     */
    orderBy?: FaturaOrderByWithRelationInput | FaturaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Faturas.
     */
    cursor?: FaturaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faturas.
     */
    skip?: number
    distinct?: FaturaScalarFieldEnum | FaturaScalarFieldEnum[]
  }

  /**
   * Fatura create
   */
  export type FaturaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
    /**
     * The data needed to create a Fatura.
     */
    data: XOR<FaturaCreateInput, FaturaUncheckedCreateInput>
  }

  /**
   * Fatura createMany
   */
  export type FaturaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Faturas.
     */
    data: FaturaCreateManyInput | FaturaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Fatura createManyAndReturn
   */
  export type FaturaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * The data used to create many Faturas.
     */
    data: FaturaCreateManyInput | FaturaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Fatura update
   */
  export type FaturaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
    /**
     * The data needed to update a Fatura.
     */
    data: XOR<FaturaUpdateInput, FaturaUncheckedUpdateInput>
    /**
     * Choose, which Fatura to update.
     */
    where: FaturaWhereUniqueInput
  }

  /**
   * Fatura updateMany
   */
  export type FaturaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Faturas.
     */
    data: XOR<FaturaUpdateManyMutationInput, FaturaUncheckedUpdateManyInput>
    /**
     * Filter which Faturas to update
     */
    where?: FaturaWhereInput
    /**
     * Limit how many Faturas to update.
     */
    limit?: number
  }

  /**
   * Fatura updateManyAndReturn
   */
  export type FaturaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * The data used to update Faturas.
     */
    data: XOR<FaturaUpdateManyMutationInput, FaturaUncheckedUpdateManyInput>
    /**
     * Filter which Faturas to update
     */
    where?: FaturaWhereInput
    /**
     * Limit how many Faturas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Fatura upsert
   */
  export type FaturaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
    /**
     * The filter to search for the Fatura to update in case it exists.
     */
    where: FaturaWhereUniqueInput
    /**
     * In case the Fatura found by the `where` argument doesn't exist, create a new Fatura with this data.
     */
    create: XOR<FaturaCreateInput, FaturaUncheckedCreateInput>
    /**
     * In case the Fatura was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FaturaUpdateInput, FaturaUncheckedUpdateInput>
  }

  /**
   * Fatura delete
   */
  export type FaturaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
    /**
     * Filter which Fatura to delete.
     */
    where: FaturaWhereUniqueInput
  }

  /**
   * Fatura deleteMany
   */
  export type FaturaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Faturas to delete
     */
    where?: FaturaWhereInput
    /**
     * Limit how many Faturas to delete.
     */
    limit?: number
  }

  /**
   * Fatura without action
   */
  export type FaturaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fatura
     */
    select?: FaturaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Fatura
     */
    omit?: FaturaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FaturaInclude<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senhaHash: string | null
    papel: $Enums.PapelUsuario | null
    ativo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senhaHash: string | null
    papel: $Enums.PapelUsuario | null
    ativo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    senhaHash: number
    papel: number
    ativo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senhaHash?: true
    papel?: true
    ativo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senhaHash?: true
    papel?: true
    ativo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senhaHash?: true
    papel?: true
    ativo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    nome: string
    email: string
    senhaHash: string
    papel: $Enums.PapelUsuario
    ativo: boolean
    createdAt: Date
    updatedAt: Date
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senhaHash?: boolean
    papel?: boolean
    ativo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    atestos?: boolean | Usuario$atestosArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senhaHash?: boolean
    papel?: boolean
    ativo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senhaHash?: boolean
    papel?: boolean
    ativo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    senhaHash?: boolean
    papel?: boolean
    ativo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "email" | "senhaHash" | "papel" | "ativo" | "createdAt" | "updatedAt", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    atestos?: boolean | Usuario$atestosArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      atestos: Prisma.$AtestoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string
      senhaHash: string
      papel: $Enums.PapelUsuario
      ativo: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    atestos<T extends Usuario$atestosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$atestosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AtestoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly nome: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly senhaHash: FieldRef<"Usuario", 'String'>
    readonly papel: FieldRef<"Usuario", 'PapelUsuario'>
    readonly ativo: FieldRef<"Usuario", 'Boolean'>
    readonly createdAt: FieldRef<"Usuario", 'DateTime'>
    readonly updatedAt: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.atestos
   */
  export type Usuario$atestosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Atesto
     */
    select?: AtestoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Atesto
     */
    omit?: AtestoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AtestoInclude<ExtArgs> | null
    where?: AtestoWhereInput
    orderBy?: AtestoOrderByWithRelationInput | AtestoOrderByWithRelationInput[]
    cursor?: AtestoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AtestoScalarFieldEnum | AtestoScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Despesa
   */

  export type AggregateDespesa = {
    _count: DespesaCountAggregateOutputType | null
    _avg: DespesaAvgAggregateOutputType | null
    _sum: DespesaSumAggregateOutputType | null
    _min: DespesaMinAggregateOutputType | null
    _max: DespesaMaxAggregateOutputType | null
  }

  export type DespesaAvgAggregateOutputType = {
    id: number | null
    valor: Decimal | null
    centroCustoId: number | null
  }

  export type DespesaSumAggregateOutputType = {
    id: number | null
    valor: Decimal | null
    centroCustoId: number | null
  }

  export type DespesaMinAggregateOutputType = {
    id: number | null
    categoria: $Enums.CategoriaDespesa | null
    valor: Decimal | null
    data: Date | null
    descricao: string | null
    centroCustoId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DespesaMaxAggregateOutputType = {
    id: number | null
    categoria: $Enums.CategoriaDespesa | null
    valor: Decimal | null
    data: Date | null
    descricao: string | null
    centroCustoId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DespesaCountAggregateOutputType = {
    id: number
    categoria: number
    valor: number
    data: number
    descricao: number
    centroCustoId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DespesaAvgAggregateInputType = {
    id?: true
    valor?: true
    centroCustoId?: true
  }

  export type DespesaSumAggregateInputType = {
    id?: true
    valor?: true
    centroCustoId?: true
  }

  export type DespesaMinAggregateInputType = {
    id?: true
    categoria?: true
    valor?: true
    data?: true
    descricao?: true
    centroCustoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DespesaMaxAggregateInputType = {
    id?: true
    categoria?: true
    valor?: true
    data?: true
    descricao?: true
    centroCustoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DespesaCountAggregateInputType = {
    id?: true
    categoria?: true
    valor?: true
    data?: true
    descricao?: true
    centroCustoId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DespesaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Despesa to aggregate.
     */
    where?: DespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Despesas to fetch.
     */
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Despesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Despesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Despesas
    **/
    _count?: true | DespesaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DespesaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DespesaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DespesaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DespesaMaxAggregateInputType
  }

  export type GetDespesaAggregateType<T extends DespesaAggregateArgs> = {
        [P in keyof T & keyof AggregateDespesa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDespesa[P]>
      : GetScalarType<T[P], AggregateDespesa[P]>
  }




  export type DespesaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DespesaWhereInput
    orderBy?: DespesaOrderByWithAggregationInput | DespesaOrderByWithAggregationInput[]
    by: DespesaScalarFieldEnum[] | DespesaScalarFieldEnum
    having?: DespesaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DespesaCountAggregateInputType | true
    _avg?: DespesaAvgAggregateInputType
    _sum?: DespesaSumAggregateInputType
    _min?: DespesaMinAggregateInputType
    _max?: DespesaMaxAggregateInputType
  }

  export type DespesaGroupByOutputType = {
    id: number
    categoria: $Enums.CategoriaDespesa
    valor: Decimal
    data: Date
    descricao: string | null
    centroCustoId: number | null
    createdAt: Date
    updatedAt: Date
    _count: DespesaCountAggregateOutputType | null
    _avg: DespesaAvgAggregateOutputType | null
    _sum: DespesaSumAggregateOutputType | null
    _min: DespesaMinAggregateOutputType | null
    _max: DespesaMaxAggregateOutputType | null
  }

  type GetDespesaGroupByPayload<T extends DespesaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DespesaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DespesaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DespesaGroupByOutputType[P]>
            : GetScalarType<T[P], DespesaGroupByOutputType[P]>
        }
      >
    >


  export type DespesaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoria?: boolean
    valor?: boolean
    data?: boolean
    descricao?: boolean
    centroCustoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    centroCusto?: boolean | Despesa$centroCustoArgs<ExtArgs>
  }, ExtArgs["result"]["despesa"]>

  export type DespesaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoria?: boolean
    valor?: boolean
    data?: boolean
    descricao?: boolean
    centroCustoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    centroCusto?: boolean | Despesa$centroCustoArgs<ExtArgs>
  }, ExtArgs["result"]["despesa"]>

  export type DespesaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoria?: boolean
    valor?: boolean
    data?: boolean
    descricao?: boolean
    centroCustoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    centroCusto?: boolean | Despesa$centroCustoArgs<ExtArgs>
  }, ExtArgs["result"]["despesa"]>

  export type DespesaSelectScalar = {
    id?: boolean
    categoria?: boolean
    valor?: boolean
    data?: boolean
    descricao?: boolean
    centroCustoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DespesaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "categoria" | "valor" | "data" | "descricao" | "centroCustoId" | "createdAt" | "updatedAt", ExtArgs["result"]["despesa"]>
  export type DespesaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    centroCusto?: boolean | Despesa$centroCustoArgs<ExtArgs>
  }
  export type DespesaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    centroCusto?: boolean | Despesa$centroCustoArgs<ExtArgs>
  }
  export type DespesaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    centroCusto?: boolean | Despesa$centroCustoArgs<ExtArgs>
  }

  export type $DespesaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Despesa"
    objects: {
      centroCusto: Prisma.$CentroCustoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      categoria: $Enums.CategoriaDespesa
      valor: Prisma.Decimal
      data: Date
      descricao: string | null
      centroCustoId: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["despesa"]>
    composites: {}
  }

  type DespesaGetPayload<S extends boolean | null | undefined | DespesaDefaultArgs> = $Result.GetResult<Prisma.$DespesaPayload, S>

  type DespesaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DespesaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DespesaCountAggregateInputType | true
    }

  export interface DespesaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Despesa'], meta: { name: 'Despesa' } }
    /**
     * Find zero or one Despesa that matches the filter.
     * @param {DespesaFindUniqueArgs} args - Arguments to find a Despesa
     * @example
     * // Get one Despesa
     * const despesa = await prisma.despesa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DespesaFindUniqueArgs>(args: SelectSubset<T, DespesaFindUniqueArgs<ExtArgs>>): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Despesa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DespesaFindUniqueOrThrowArgs} args - Arguments to find a Despesa
     * @example
     * // Get one Despesa
     * const despesa = await prisma.despesa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DespesaFindUniqueOrThrowArgs>(args: SelectSubset<T, DespesaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Despesa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaFindFirstArgs} args - Arguments to find a Despesa
     * @example
     * // Get one Despesa
     * const despesa = await prisma.despesa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DespesaFindFirstArgs>(args?: SelectSubset<T, DespesaFindFirstArgs<ExtArgs>>): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Despesa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaFindFirstOrThrowArgs} args - Arguments to find a Despesa
     * @example
     * // Get one Despesa
     * const despesa = await prisma.despesa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DespesaFindFirstOrThrowArgs>(args?: SelectSubset<T, DespesaFindFirstOrThrowArgs<ExtArgs>>): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Despesas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Despesas
     * const despesas = await prisma.despesa.findMany()
     * 
     * // Get first 10 Despesas
     * const despesas = await prisma.despesa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const despesaWithIdOnly = await prisma.despesa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DespesaFindManyArgs>(args?: SelectSubset<T, DespesaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Despesa.
     * @param {DespesaCreateArgs} args - Arguments to create a Despesa.
     * @example
     * // Create one Despesa
     * const Despesa = await prisma.despesa.create({
     *   data: {
     *     // ... data to create a Despesa
     *   }
     * })
     * 
     */
    create<T extends DespesaCreateArgs>(args: SelectSubset<T, DespesaCreateArgs<ExtArgs>>): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Despesas.
     * @param {DespesaCreateManyArgs} args - Arguments to create many Despesas.
     * @example
     * // Create many Despesas
     * const despesa = await prisma.despesa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DespesaCreateManyArgs>(args?: SelectSubset<T, DespesaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Despesas and returns the data saved in the database.
     * @param {DespesaCreateManyAndReturnArgs} args - Arguments to create many Despesas.
     * @example
     * // Create many Despesas
     * const despesa = await prisma.despesa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Despesas and only return the `id`
     * const despesaWithIdOnly = await prisma.despesa.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DespesaCreateManyAndReturnArgs>(args?: SelectSubset<T, DespesaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Despesa.
     * @param {DespesaDeleteArgs} args - Arguments to delete one Despesa.
     * @example
     * // Delete one Despesa
     * const Despesa = await prisma.despesa.delete({
     *   where: {
     *     // ... filter to delete one Despesa
     *   }
     * })
     * 
     */
    delete<T extends DespesaDeleteArgs>(args: SelectSubset<T, DespesaDeleteArgs<ExtArgs>>): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Despesa.
     * @param {DespesaUpdateArgs} args - Arguments to update one Despesa.
     * @example
     * // Update one Despesa
     * const despesa = await prisma.despesa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DespesaUpdateArgs>(args: SelectSubset<T, DespesaUpdateArgs<ExtArgs>>): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Despesas.
     * @param {DespesaDeleteManyArgs} args - Arguments to filter Despesas to delete.
     * @example
     * // Delete a few Despesas
     * const { count } = await prisma.despesa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DespesaDeleteManyArgs>(args?: SelectSubset<T, DespesaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Despesas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Despesas
     * const despesa = await prisma.despesa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DespesaUpdateManyArgs>(args: SelectSubset<T, DespesaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Despesas and returns the data updated in the database.
     * @param {DespesaUpdateManyAndReturnArgs} args - Arguments to update many Despesas.
     * @example
     * // Update many Despesas
     * const despesa = await prisma.despesa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Despesas and only return the `id`
     * const despesaWithIdOnly = await prisma.despesa.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DespesaUpdateManyAndReturnArgs>(args: SelectSubset<T, DespesaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Despesa.
     * @param {DespesaUpsertArgs} args - Arguments to update or create a Despesa.
     * @example
     * // Update or create a Despesa
     * const despesa = await prisma.despesa.upsert({
     *   create: {
     *     // ... data to create a Despesa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Despesa we want to update
     *   }
     * })
     */
    upsert<T extends DespesaUpsertArgs>(args: SelectSubset<T, DespesaUpsertArgs<ExtArgs>>): Prisma__DespesaClient<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Despesas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaCountArgs} args - Arguments to filter Despesas to count.
     * @example
     * // Count the number of Despesas
     * const count = await prisma.despesa.count({
     *   where: {
     *     // ... the filter for the Despesas we want to count
     *   }
     * })
    **/
    count<T extends DespesaCountArgs>(
      args?: Subset<T, DespesaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DespesaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Despesa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DespesaAggregateArgs>(args: Subset<T, DespesaAggregateArgs>): Prisma.PrismaPromise<GetDespesaAggregateType<T>>

    /**
     * Group by Despesa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DespesaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DespesaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DespesaGroupByArgs['orderBy'] }
        : { orderBy?: DespesaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DespesaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDespesaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Despesa model
   */
  readonly fields: DespesaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Despesa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DespesaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    centroCusto<T extends Despesa$centroCustoArgs<ExtArgs> = {}>(args?: Subset<T, Despesa$centroCustoArgs<ExtArgs>>): Prisma__CentroCustoClient<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Despesa model
   */
  interface DespesaFieldRefs {
    readonly id: FieldRef<"Despesa", 'Int'>
    readonly categoria: FieldRef<"Despesa", 'CategoriaDespesa'>
    readonly valor: FieldRef<"Despesa", 'Decimal'>
    readonly data: FieldRef<"Despesa", 'DateTime'>
    readonly descricao: FieldRef<"Despesa", 'String'>
    readonly centroCustoId: FieldRef<"Despesa", 'Int'>
    readonly createdAt: FieldRef<"Despesa", 'DateTime'>
    readonly updatedAt: FieldRef<"Despesa", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Despesa findUnique
   */
  export type DespesaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter, which Despesa to fetch.
     */
    where: DespesaWhereUniqueInput
  }

  /**
   * Despesa findUniqueOrThrow
   */
  export type DespesaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter, which Despesa to fetch.
     */
    where: DespesaWhereUniqueInput
  }

  /**
   * Despesa findFirst
   */
  export type DespesaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter, which Despesa to fetch.
     */
    where?: DespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Despesas to fetch.
     */
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Despesas.
     */
    cursor?: DespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Despesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Despesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Despesas.
     */
    distinct?: DespesaScalarFieldEnum | DespesaScalarFieldEnum[]
  }

  /**
   * Despesa findFirstOrThrow
   */
  export type DespesaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter, which Despesa to fetch.
     */
    where?: DespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Despesas to fetch.
     */
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Despesas.
     */
    cursor?: DespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Despesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Despesas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Despesas.
     */
    distinct?: DespesaScalarFieldEnum | DespesaScalarFieldEnum[]
  }

  /**
   * Despesa findMany
   */
  export type DespesaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter, which Despesas to fetch.
     */
    where?: DespesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Despesas to fetch.
     */
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Despesas.
     */
    cursor?: DespesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Despesas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Despesas.
     */
    skip?: number
    distinct?: DespesaScalarFieldEnum | DespesaScalarFieldEnum[]
  }

  /**
   * Despesa create
   */
  export type DespesaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * The data needed to create a Despesa.
     */
    data: XOR<DespesaCreateInput, DespesaUncheckedCreateInput>
  }

  /**
   * Despesa createMany
   */
  export type DespesaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Despesas.
     */
    data: DespesaCreateManyInput | DespesaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Despesa createManyAndReturn
   */
  export type DespesaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * The data used to create many Despesas.
     */
    data: DespesaCreateManyInput | DespesaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Despesa update
   */
  export type DespesaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * The data needed to update a Despesa.
     */
    data: XOR<DespesaUpdateInput, DespesaUncheckedUpdateInput>
    /**
     * Choose, which Despesa to update.
     */
    where: DespesaWhereUniqueInput
  }

  /**
   * Despesa updateMany
   */
  export type DespesaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Despesas.
     */
    data: XOR<DespesaUpdateManyMutationInput, DespesaUncheckedUpdateManyInput>
    /**
     * Filter which Despesas to update
     */
    where?: DespesaWhereInput
    /**
     * Limit how many Despesas to update.
     */
    limit?: number
  }

  /**
   * Despesa updateManyAndReturn
   */
  export type DespesaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * The data used to update Despesas.
     */
    data: XOR<DespesaUpdateManyMutationInput, DespesaUncheckedUpdateManyInput>
    /**
     * Filter which Despesas to update
     */
    where?: DespesaWhereInput
    /**
     * Limit how many Despesas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Despesa upsert
   */
  export type DespesaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * The filter to search for the Despesa to update in case it exists.
     */
    where: DespesaWhereUniqueInput
    /**
     * In case the Despesa found by the `where` argument doesn't exist, create a new Despesa with this data.
     */
    create: XOR<DespesaCreateInput, DespesaUncheckedCreateInput>
    /**
     * In case the Despesa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DespesaUpdateInput, DespesaUncheckedUpdateInput>
  }

  /**
   * Despesa delete
   */
  export type DespesaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    /**
     * Filter which Despesa to delete.
     */
    where: DespesaWhereUniqueInput
  }

  /**
   * Despesa deleteMany
   */
  export type DespesaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Despesas to delete
     */
    where?: DespesaWhereInput
    /**
     * Limit how many Despesas to delete.
     */
    limit?: number
  }

  /**
   * Despesa.centroCusto
   */
  export type Despesa$centroCustoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
    where?: CentroCustoWhereInput
  }

  /**
   * Despesa without action
   */
  export type DespesaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
  }


  /**
   * Model CentroCusto
   */

  export type AggregateCentroCusto = {
    _count: CentroCustoCountAggregateOutputType | null
    _avg: CentroCustoAvgAggregateOutputType | null
    _sum: CentroCustoSumAggregateOutputType | null
    _min: CentroCustoMinAggregateOutputType | null
    _max: CentroCustoMaxAggregateOutputType | null
  }

  export type CentroCustoAvgAggregateOutputType = {
    id: number | null
  }

  export type CentroCustoSumAggregateOutputType = {
    id: number | null
  }

  export type CentroCustoMinAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CentroCustoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CentroCustoCountAggregateOutputType = {
    id: number
    nome: number
    descricao: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CentroCustoAvgAggregateInputType = {
    id?: true
  }

  export type CentroCustoSumAggregateInputType = {
    id?: true
  }

  export type CentroCustoMinAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CentroCustoMaxAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CentroCustoCountAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CentroCustoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CentroCusto to aggregate.
     */
    where?: CentroCustoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CentroCustos to fetch.
     */
    orderBy?: CentroCustoOrderByWithRelationInput | CentroCustoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CentroCustoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CentroCustos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CentroCustos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CentroCustos
    **/
    _count?: true | CentroCustoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CentroCustoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CentroCustoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CentroCustoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CentroCustoMaxAggregateInputType
  }

  export type GetCentroCustoAggregateType<T extends CentroCustoAggregateArgs> = {
        [P in keyof T & keyof AggregateCentroCusto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCentroCusto[P]>
      : GetScalarType<T[P], AggregateCentroCusto[P]>
  }




  export type CentroCustoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CentroCustoWhereInput
    orderBy?: CentroCustoOrderByWithAggregationInput | CentroCustoOrderByWithAggregationInput[]
    by: CentroCustoScalarFieldEnum[] | CentroCustoScalarFieldEnum
    having?: CentroCustoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CentroCustoCountAggregateInputType | true
    _avg?: CentroCustoAvgAggregateInputType
    _sum?: CentroCustoSumAggregateInputType
    _min?: CentroCustoMinAggregateInputType
    _max?: CentroCustoMaxAggregateInputType
  }

  export type CentroCustoGroupByOutputType = {
    id: number
    nome: string
    descricao: string | null
    createdAt: Date
    updatedAt: Date
    _count: CentroCustoCountAggregateOutputType | null
    _avg: CentroCustoAvgAggregateOutputType | null
    _sum: CentroCustoSumAggregateOutputType | null
    _min: CentroCustoMinAggregateOutputType | null
    _max: CentroCustoMaxAggregateOutputType | null
  }

  type GetCentroCustoGroupByPayload<T extends CentroCustoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CentroCustoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CentroCustoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CentroCustoGroupByOutputType[P]>
            : GetScalarType<T[P], CentroCustoGroupByOutputType[P]>
        }
      >
    >


  export type CentroCustoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    despesas?: boolean | CentroCusto$despesasArgs<ExtArgs>
    _count?: boolean | CentroCustoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["centroCusto"]>

  export type CentroCustoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["centroCusto"]>

  export type CentroCustoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["centroCusto"]>

  export type CentroCustoSelectScalar = {
    id?: boolean
    nome?: boolean
    descricao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CentroCustoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "descricao" | "createdAt" | "updatedAt", ExtArgs["result"]["centroCusto"]>
  export type CentroCustoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    despesas?: boolean | CentroCusto$despesasArgs<ExtArgs>
    _count?: boolean | CentroCustoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CentroCustoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CentroCustoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CentroCustoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CentroCusto"
    objects: {
      despesas: Prisma.$DespesaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      descricao: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["centroCusto"]>
    composites: {}
  }

  type CentroCustoGetPayload<S extends boolean | null | undefined | CentroCustoDefaultArgs> = $Result.GetResult<Prisma.$CentroCustoPayload, S>

  type CentroCustoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CentroCustoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CentroCustoCountAggregateInputType | true
    }

  export interface CentroCustoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CentroCusto'], meta: { name: 'CentroCusto' } }
    /**
     * Find zero or one CentroCusto that matches the filter.
     * @param {CentroCustoFindUniqueArgs} args - Arguments to find a CentroCusto
     * @example
     * // Get one CentroCusto
     * const centroCusto = await prisma.centroCusto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CentroCustoFindUniqueArgs>(args: SelectSubset<T, CentroCustoFindUniqueArgs<ExtArgs>>): Prisma__CentroCustoClient<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CentroCusto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CentroCustoFindUniqueOrThrowArgs} args - Arguments to find a CentroCusto
     * @example
     * // Get one CentroCusto
     * const centroCusto = await prisma.centroCusto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CentroCustoFindUniqueOrThrowArgs>(args: SelectSubset<T, CentroCustoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CentroCustoClient<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CentroCusto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CentroCustoFindFirstArgs} args - Arguments to find a CentroCusto
     * @example
     * // Get one CentroCusto
     * const centroCusto = await prisma.centroCusto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CentroCustoFindFirstArgs>(args?: SelectSubset<T, CentroCustoFindFirstArgs<ExtArgs>>): Prisma__CentroCustoClient<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CentroCusto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CentroCustoFindFirstOrThrowArgs} args - Arguments to find a CentroCusto
     * @example
     * // Get one CentroCusto
     * const centroCusto = await prisma.centroCusto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CentroCustoFindFirstOrThrowArgs>(args?: SelectSubset<T, CentroCustoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CentroCustoClient<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CentroCustos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CentroCustoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CentroCustos
     * const centroCustos = await prisma.centroCusto.findMany()
     * 
     * // Get first 10 CentroCustos
     * const centroCustos = await prisma.centroCusto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const centroCustoWithIdOnly = await prisma.centroCusto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CentroCustoFindManyArgs>(args?: SelectSubset<T, CentroCustoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CentroCusto.
     * @param {CentroCustoCreateArgs} args - Arguments to create a CentroCusto.
     * @example
     * // Create one CentroCusto
     * const CentroCusto = await prisma.centroCusto.create({
     *   data: {
     *     // ... data to create a CentroCusto
     *   }
     * })
     * 
     */
    create<T extends CentroCustoCreateArgs>(args: SelectSubset<T, CentroCustoCreateArgs<ExtArgs>>): Prisma__CentroCustoClient<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CentroCustos.
     * @param {CentroCustoCreateManyArgs} args - Arguments to create many CentroCustos.
     * @example
     * // Create many CentroCustos
     * const centroCusto = await prisma.centroCusto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CentroCustoCreateManyArgs>(args?: SelectSubset<T, CentroCustoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CentroCustos and returns the data saved in the database.
     * @param {CentroCustoCreateManyAndReturnArgs} args - Arguments to create many CentroCustos.
     * @example
     * // Create many CentroCustos
     * const centroCusto = await prisma.centroCusto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CentroCustos and only return the `id`
     * const centroCustoWithIdOnly = await prisma.centroCusto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CentroCustoCreateManyAndReturnArgs>(args?: SelectSubset<T, CentroCustoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CentroCusto.
     * @param {CentroCustoDeleteArgs} args - Arguments to delete one CentroCusto.
     * @example
     * // Delete one CentroCusto
     * const CentroCusto = await prisma.centroCusto.delete({
     *   where: {
     *     // ... filter to delete one CentroCusto
     *   }
     * })
     * 
     */
    delete<T extends CentroCustoDeleteArgs>(args: SelectSubset<T, CentroCustoDeleteArgs<ExtArgs>>): Prisma__CentroCustoClient<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CentroCusto.
     * @param {CentroCustoUpdateArgs} args - Arguments to update one CentroCusto.
     * @example
     * // Update one CentroCusto
     * const centroCusto = await prisma.centroCusto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CentroCustoUpdateArgs>(args: SelectSubset<T, CentroCustoUpdateArgs<ExtArgs>>): Prisma__CentroCustoClient<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CentroCustos.
     * @param {CentroCustoDeleteManyArgs} args - Arguments to filter CentroCustos to delete.
     * @example
     * // Delete a few CentroCustos
     * const { count } = await prisma.centroCusto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CentroCustoDeleteManyArgs>(args?: SelectSubset<T, CentroCustoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CentroCustos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CentroCustoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CentroCustos
     * const centroCusto = await prisma.centroCusto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CentroCustoUpdateManyArgs>(args: SelectSubset<T, CentroCustoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CentroCustos and returns the data updated in the database.
     * @param {CentroCustoUpdateManyAndReturnArgs} args - Arguments to update many CentroCustos.
     * @example
     * // Update many CentroCustos
     * const centroCusto = await prisma.centroCusto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CentroCustos and only return the `id`
     * const centroCustoWithIdOnly = await prisma.centroCusto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CentroCustoUpdateManyAndReturnArgs>(args: SelectSubset<T, CentroCustoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CentroCusto.
     * @param {CentroCustoUpsertArgs} args - Arguments to update or create a CentroCusto.
     * @example
     * // Update or create a CentroCusto
     * const centroCusto = await prisma.centroCusto.upsert({
     *   create: {
     *     // ... data to create a CentroCusto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CentroCusto we want to update
     *   }
     * })
     */
    upsert<T extends CentroCustoUpsertArgs>(args: SelectSubset<T, CentroCustoUpsertArgs<ExtArgs>>): Prisma__CentroCustoClient<$Result.GetResult<Prisma.$CentroCustoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CentroCustos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CentroCustoCountArgs} args - Arguments to filter CentroCustos to count.
     * @example
     * // Count the number of CentroCustos
     * const count = await prisma.centroCusto.count({
     *   where: {
     *     // ... the filter for the CentroCustos we want to count
     *   }
     * })
    **/
    count<T extends CentroCustoCountArgs>(
      args?: Subset<T, CentroCustoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CentroCustoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CentroCusto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CentroCustoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CentroCustoAggregateArgs>(args: Subset<T, CentroCustoAggregateArgs>): Prisma.PrismaPromise<GetCentroCustoAggregateType<T>>

    /**
     * Group by CentroCusto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CentroCustoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CentroCustoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CentroCustoGroupByArgs['orderBy'] }
        : { orderBy?: CentroCustoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CentroCustoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCentroCustoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CentroCusto model
   */
  readonly fields: CentroCustoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CentroCusto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CentroCustoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    despesas<T extends CentroCusto$despesasArgs<ExtArgs> = {}>(args?: Subset<T, CentroCusto$despesasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DespesaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CentroCusto model
   */
  interface CentroCustoFieldRefs {
    readonly id: FieldRef<"CentroCusto", 'Int'>
    readonly nome: FieldRef<"CentroCusto", 'String'>
    readonly descricao: FieldRef<"CentroCusto", 'String'>
    readonly createdAt: FieldRef<"CentroCusto", 'DateTime'>
    readonly updatedAt: FieldRef<"CentroCusto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CentroCusto findUnique
   */
  export type CentroCustoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
    /**
     * Filter, which CentroCusto to fetch.
     */
    where: CentroCustoWhereUniqueInput
  }

  /**
   * CentroCusto findUniqueOrThrow
   */
  export type CentroCustoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
    /**
     * Filter, which CentroCusto to fetch.
     */
    where: CentroCustoWhereUniqueInput
  }

  /**
   * CentroCusto findFirst
   */
  export type CentroCustoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
    /**
     * Filter, which CentroCusto to fetch.
     */
    where?: CentroCustoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CentroCustos to fetch.
     */
    orderBy?: CentroCustoOrderByWithRelationInput | CentroCustoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CentroCustos.
     */
    cursor?: CentroCustoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CentroCustos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CentroCustos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CentroCustos.
     */
    distinct?: CentroCustoScalarFieldEnum | CentroCustoScalarFieldEnum[]
  }

  /**
   * CentroCusto findFirstOrThrow
   */
  export type CentroCustoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
    /**
     * Filter, which CentroCusto to fetch.
     */
    where?: CentroCustoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CentroCustos to fetch.
     */
    orderBy?: CentroCustoOrderByWithRelationInput | CentroCustoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CentroCustos.
     */
    cursor?: CentroCustoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CentroCustos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CentroCustos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CentroCustos.
     */
    distinct?: CentroCustoScalarFieldEnum | CentroCustoScalarFieldEnum[]
  }

  /**
   * CentroCusto findMany
   */
  export type CentroCustoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
    /**
     * Filter, which CentroCustos to fetch.
     */
    where?: CentroCustoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CentroCustos to fetch.
     */
    orderBy?: CentroCustoOrderByWithRelationInput | CentroCustoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CentroCustos.
     */
    cursor?: CentroCustoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CentroCustos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CentroCustos.
     */
    skip?: number
    distinct?: CentroCustoScalarFieldEnum | CentroCustoScalarFieldEnum[]
  }

  /**
   * CentroCusto create
   */
  export type CentroCustoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
    /**
     * The data needed to create a CentroCusto.
     */
    data: XOR<CentroCustoCreateInput, CentroCustoUncheckedCreateInput>
  }

  /**
   * CentroCusto createMany
   */
  export type CentroCustoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CentroCustos.
     */
    data: CentroCustoCreateManyInput | CentroCustoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CentroCusto createManyAndReturn
   */
  export type CentroCustoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * The data used to create many CentroCustos.
     */
    data: CentroCustoCreateManyInput | CentroCustoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CentroCusto update
   */
  export type CentroCustoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
    /**
     * The data needed to update a CentroCusto.
     */
    data: XOR<CentroCustoUpdateInput, CentroCustoUncheckedUpdateInput>
    /**
     * Choose, which CentroCusto to update.
     */
    where: CentroCustoWhereUniqueInput
  }

  /**
   * CentroCusto updateMany
   */
  export type CentroCustoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CentroCustos.
     */
    data: XOR<CentroCustoUpdateManyMutationInput, CentroCustoUncheckedUpdateManyInput>
    /**
     * Filter which CentroCustos to update
     */
    where?: CentroCustoWhereInput
    /**
     * Limit how many CentroCustos to update.
     */
    limit?: number
  }

  /**
   * CentroCusto updateManyAndReturn
   */
  export type CentroCustoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * The data used to update CentroCustos.
     */
    data: XOR<CentroCustoUpdateManyMutationInput, CentroCustoUncheckedUpdateManyInput>
    /**
     * Filter which CentroCustos to update
     */
    where?: CentroCustoWhereInput
    /**
     * Limit how many CentroCustos to update.
     */
    limit?: number
  }

  /**
   * CentroCusto upsert
   */
  export type CentroCustoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
    /**
     * The filter to search for the CentroCusto to update in case it exists.
     */
    where: CentroCustoWhereUniqueInput
    /**
     * In case the CentroCusto found by the `where` argument doesn't exist, create a new CentroCusto with this data.
     */
    create: XOR<CentroCustoCreateInput, CentroCustoUncheckedCreateInput>
    /**
     * In case the CentroCusto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CentroCustoUpdateInput, CentroCustoUncheckedUpdateInput>
  }

  /**
   * CentroCusto delete
   */
  export type CentroCustoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
    /**
     * Filter which CentroCusto to delete.
     */
    where: CentroCustoWhereUniqueInput
  }

  /**
   * CentroCusto deleteMany
   */
  export type CentroCustoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CentroCustos to delete
     */
    where?: CentroCustoWhereInput
    /**
     * Limit how many CentroCustos to delete.
     */
    limit?: number
  }

  /**
   * CentroCusto.despesas
   */
  export type CentroCusto$despesasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Despesa
     */
    select?: DespesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Despesa
     */
    omit?: DespesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DespesaInclude<ExtArgs> | null
    where?: DespesaWhereInput
    orderBy?: DespesaOrderByWithRelationInput | DespesaOrderByWithRelationInput[]
    cursor?: DespesaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DespesaScalarFieldEnum | DespesaScalarFieldEnum[]
  }

  /**
   * CentroCusto without action
   */
  export type CentroCustoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CentroCusto
     */
    select?: CentroCustoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CentroCusto
     */
    omit?: CentroCustoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CentroCustoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ClienteScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    cnpjCpf: 'cnpjCpf',
    tipo: 'tipo',
    email: 'email',
    telefone: 'telefone',
    endereco: 'endereco',
    ativo: 'ativo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const TransporteScalarFieldEnum: {
    id: 'id',
    clienteId: 'clienteId',
    numeroCteOc: 'numeroCteOc',
    dataOperacao: 'dataOperacao',
    valorTotal: 'valorTotal',
    dataEnvioFaturamento: 'dataEnvioFaturamento',
    dataVencimento: 'dataVencimento',
    dataAtesto: 'dataAtesto',
    dataNotaFiscal: 'dataNotaFiscal',
    descricaoNotaFiscal: 'descricaoNotaFiscal',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TransporteScalarFieldEnum = (typeof TransporteScalarFieldEnum)[keyof typeof TransporteScalarFieldEnum]


  export const AtestoScalarFieldEnum: {
    id: 'id',
    transporteId: 'transporteId',
    dataAtesto: 'dataAtesto',
    tipo: 'tipo',
    observacao: 'observacao',
    usuarioId: 'usuarioId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AtestoScalarFieldEnum = (typeof AtestoScalarFieldEnum)[keyof typeof AtestoScalarFieldEnum]


  export const FaturaScalarFieldEnum: {
    id: 'id',
    transporteId: 'transporteId',
    numeroFatura: 'numeroFatura',
    valor: 'valor',
    dataEmissao: 'dataEmissao',
    dataVencimento: 'dataVencimento',
    status: 'status',
    linkBoleto: 'linkBoleto',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FaturaScalarFieldEnum = (typeof FaturaScalarFieldEnum)[keyof typeof FaturaScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    senhaHash: 'senhaHash',
    papel: 'papel',
    ativo: 'ativo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const DespesaScalarFieldEnum: {
    id: 'id',
    categoria: 'categoria',
    valor: 'valor',
    data: 'data',
    descricao: 'descricao',
    centroCustoId: 'centroCustoId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DespesaScalarFieldEnum = (typeof DespesaScalarFieldEnum)[keyof typeof DespesaScalarFieldEnum]


  export const CentroCustoScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    descricao: 'descricao',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CentroCustoScalarFieldEnum = (typeof CentroCustoScalarFieldEnum)[keyof typeof CentroCustoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'TipoCliente'
   */
  export type EnumTipoClienteFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoCliente'>
    


  /**
   * Reference to a field of type 'TipoCliente[]'
   */
  export type ListEnumTipoClienteFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoCliente[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'TipoAtesto'
   */
  export type EnumTipoAtestoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoAtesto'>
    


  /**
   * Reference to a field of type 'TipoAtesto[]'
   */
  export type ListEnumTipoAtestoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoAtesto[]'>
    


  /**
   * Reference to a field of type 'StatusFatura'
   */
  export type EnumStatusFaturaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusFatura'>
    


  /**
   * Reference to a field of type 'StatusFatura[]'
   */
  export type ListEnumStatusFaturaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusFatura[]'>
    


  /**
   * Reference to a field of type 'PapelUsuario'
   */
  export type EnumPapelUsuarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PapelUsuario'>
    


  /**
   * Reference to a field of type 'PapelUsuario[]'
   */
  export type ListEnumPapelUsuarioFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PapelUsuario[]'>
    


  /**
   * Reference to a field of type 'CategoriaDespesa'
   */
  export type EnumCategoriaDespesaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriaDespesa'>
    


  /**
   * Reference to a field of type 'CategoriaDespesa[]'
   */
  export type ListEnumCategoriaDespesaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CategoriaDespesa[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type ClienteWhereInput = {
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    id?: IntFilter<"Cliente"> | number
    nome?: StringFilter<"Cliente"> | string
    cnpjCpf?: StringNullableFilter<"Cliente"> | string | null
    tipo?: EnumTipoClienteFilter<"Cliente"> | $Enums.TipoCliente
    email?: StringNullableFilter<"Cliente"> | string | null
    telefone?: StringNullableFilter<"Cliente"> | string | null
    endereco?: StringNullableFilter<"Cliente"> | string | null
    ativo?: BoolFilter<"Cliente"> | boolean
    createdAt?: DateTimeFilter<"Cliente"> | Date | string
    updatedAt?: DateTimeFilter<"Cliente"> | Date | string
    transportes?: TransporteListRelationFilter
  }

  export type ClienteOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    cnpjCpf?: SortOrderInput | SortOrder
    tipo?: SortOrder
    email?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    endereco?: SortOrderInput | SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    transportes?: TransporteOrderByRelationAggregateInput
  }

  export type ClienteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cnpjCpf?: string
    email?: string
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    nome?: StringFilter<"Cliente"> | string
    tipo?: EnumTipoClienteFilter<"Cliente"> | $Enums.TipoCliente
    telefone?: StringNullableFilter<"Cliente"> | string | null
    endereco?: StringNullableFilter<"Cliente"> | string | null
    ativo?: BoolFilter<"Cliente"> | boolean
    createdAt?: DateTimeFilter<"Cliente"> | Date | string
    updatedAt?: DateTimeFilter<"Cliente"> | Date | string
    transportes?: TransporteListRelationFilter
  }, "id" | "cnpjCpf" | "email">

  export type ClienteOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    cnpjCpf?: SortOrderInput | SortOrder
    tipo?: SortOrder
    email?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    endereco?: SortOrderInput | SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ClienteCountOrderByAggregateInput
    _avg?: ClienteAvgOrderByAggregateInput
    _max?: ClienteMaxOrderByAggregateInput
    _min?: ClienteMinOrderByAggregateInput
    _sum?: ClienteSumOrderByAggregateInput
  }

  export type ClienteScalarWhereWithAggregatesInput = {
    AND?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    OR?: ClienteScalarWhereWithAggregatesInput[]
    NOT?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cliente"> | number
    nome?: StringWithAggregatesFilter<"Cliente"> | string
    cnpjCpf?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    tipo?: EnumTipoClienteWithAggregatesFilter<"Cliente"> | $Enums.TipoCliente
    email?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    telefone?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    endereco?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    ativo?: BoolWithAggregatesFilter<"Cliente"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Cliente"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Cliente"> | Date | string
  }

  export type TransporteWhereInput = {
    AND?: TransporteWhereInput | TransporteWhereInput[]
    OR?: TransporteWhereInput[]
    NOT?: TransporteWhereInput | TransporteWhereInput[]
    id?: IntFilter<"Transporte"> | number
    clienteId?: IntFilter<"Transporte"> | number
    numeroCteOc?: StringFilter<"Transporte"> | string
    dataOperacao?: DateTimeFilter<"Transporte"> | Date | string
    valorTotal?: DecimalFilter<"Transporte"> | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    dataVencimento?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    dataAtesto?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    dataNotaFiscal?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    descricaoNotaFiscal?: StringNullableFilter<"Transporte"> | string | null
    createdAt?: DateTimeFilter<"Transporte"> | Date | string
    updatedAt?: DateTimeFilter<"Transporte"> | Date | string
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    atestos?: AtestoListRelationFilter
    faturas?: FaturaListRelationFilter
  }

  export type TransporteOrderByWithRelationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    numeroCteOc?: SortOrder
    dataOperacao?: SortOrder
    valorTotal?: SortOrder
    dataEnvioFaturamento?: SortOrderInput | SortOrder
    dataVencimento?: SortOrderInput | SortOrder
    dataAtesto?: SortOrderInput | SortOrder
    dataNotaFiscal?: SortOrderInput | SortOrder
    descricaoNotaFiscal?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cliente?: ClienteOrderByWithRelationInput
    atestos?: AtestoOrderByRelationAggregateInput
    faturas?: FaturaOrderByRelationAggregateInput
  }

  export type TransporteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TransporteWhereInput | TransporteWhereInput[]
    OR?: TransporteWhereInput[]
    NOT?: TransporteWhereInput | TransporteWhereInput[]
    clienteId?: IntFilter<"Transporte"> | number
    numeroCteOc?: StringFilter<"Transporte"> | string
    dataOperacao?: DateTimeFilter<"Transporte"> | Date | string
    valorTotal?: DecimalFilter<"Transporte"> | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    dataVencimento?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    dataAtesto?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    dataNotaFiscal?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    descricaoNotaFiscal?: StringNullableFilter<"Transporte"> | string | null
    createdAt?: DateTimeFilter<"Transporte"> | Date | string
    updatedAt?: DateTimeFilter<"Transporte"> | Date | string
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    atestos?: AtestoListRelationFilter
    faturas?: FaturaListRelationFilter
  }, "id">

  export type TransporteOrderByWithAggregationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    numeroCteOc?: SortOrder
    dataOperacao?: SortOrder
    valorTotal?: SortOrder
    dataEnvioFaturamento?: SortOrderInput | SortOrder
    dataVencimento?: SortOrderInput | SortOrder
    dataAtesto?: SortOrderInput | SortOrder
    dataNotaFiscal?: SortOrderInput | SortOrder
    descricaoNotaFiscal?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TransporteCountOrderByAggregateInput
    _avg?: TransporteAvgOrderByAggregateInput
    _max?: TransporteMaxOrderByAggregateInput
    _min?: TransporteMinOrderByAggregateInput
    _sum?: TransporteSumOrderByAggregateInput
  }

  export type TransporteScalarWhereWithAggregatesInput = {
    AND?: TransporteScalarWhereWithAggregatesInput | TransporteScalarWhereWithAggregatesInput[]
    OR?: TransporteScalarWhereWithAggregatesInput[]
    NOT?: TransporteScalarWhereWithAggregatesInput | TransporteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Transporte"> | number
    clienteId?: IntWithAggregatesFilter<"Transporte"> | number
    numeroCteOc?: StringWithAggregatesFilter<"Transporte"> | string
    dataOperacao?: DateTimeWithAggregatesFilter<"Transporte"> | Date | string
    valorTotal?: DecimalWithAggregatesFilter<"Transporte"> | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: DateTimeNullableWithAggregatesFilter<"Transporte"> | Date | string | null
    dataVencimento?: DateTimeNullableWithAggregatesFilter<"Transporte"> | Date | string | null
    dataAtesto?: DateTimeNullableWithAggregatesFilter<"Transporte"> | Date | string | null
    dataNotaFiscal?: DateTimeNullableWithAggregatesFilter<"Transporte"> | Date | string | null
    descricaoNotaFiscal?: StringNullableWithAggregatesFilter<"Transporte"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Transporte"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Transporte"> | Date | string
  }

  export type AtestoWhereInput = {
    AND?: AtestoWhereInput | AtestoWhereInput[]
    OR?: AtestoWhereInput[]
    NOT?: AtestoWhereInput | AtestoWhereInput[]
    id?: IntFilter<"Atesto"> | number
    transporteId?: IntFilter<"Atesto"> | number
    dataAtesto?: DateTimeFilter<"Atesto"> | Date | string
    tipo?: EnumTipoAtestoFilter<"Atesto"> | $Enums.TipoAtesto
    observacao?: StringNullableFilter<"Atesto"> | string | null
    usuarioId?: IntNullableFilter<"Atesto"> | number | null
    createdAt?: DateTimeFilter<"Atesto"> | Date | string
    updatedAt?: DateTimeFilter<"Atesto"> | Date | string
    transporte?: XOR<TransporteScalarRelationFilter, TransporteWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }

  export type AtestoOrderByWithRelationInput = {
    id?: SortOrder
    transporteId?: SortOrder
    dataAtesto?: SortOrder
    tipo?: SortOrder
    observacao?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    transporte?: TransporteOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type AtestoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AtestoWhereInput | AtestoWhereInput[]
    OR?: AtestoWhereInput[]
    NOT?: AtestoWhereInput | AtestoWhereInput[]
    transporteId?: IntFilter<"Atesto"> | number
    dataAtesto?: DateTimeFilter<"Atesto"> | Date | string
    tipo?: EnumTipoAtestoFilter<"Atesto"> | $Enums.TipoAtesto
    observacao?: StringNullableFilter<"Atesto"> | string | null
    usuarioId?: IntNullableFilter<"Atesto"> | number | null
    createdAt?: DateTimeFilter<"Atesto"> | Date | string
    updatedAt?: DateTimeFilter<"Atesto"> | Date | string
    transporte?: XOR<TransporteScalarRelationFilter, TransporteWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
  }, "id">

  export type AtestoOrderByWithAggregationInput = {
    id?: SortOrder
    transporteId?: SortOrder
    dataAtesto?: SortOrder
    tipo?: SortOrder
    observacao?: SortOrderInput | SortOrder
    usuarioId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AtestoCountOrderByAggregateInput
    _avg?: AtestoAvgOrderByAggregateInput
    _max?: AtestoMaxOrderByAggregateInput
    _min?: AtestoMinOrderByAggregateInput
    _sum?: AtestoSumOrderByAggregateInput
  }

  export type AtestoScalarWhereWithAggregatesInput = {
    AND?: AtestoScalarWhereWithAggregatesInput | AtestoScalarWhereWithAggregatesInput[]
    OR?: AtestoScalarWhereWithAggregatesInput[]
    NOT?: AtestoScalarWhereWithAggregatesInput | AtestoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Atesto"> | number
    transporteId?: IntWithAggregatesFilter<"Atesto"> | number
    dataAtesto?: DateTimeWithAggregatesFilter<"Atesto"> | Date | string
    tipo?: EnumTipoAtestoWithAggregatesFilter<"Atesto"> | $Enums.TipoAtesto
    observacao?: StringNullableWithAggregatesFilter<"Atesto"> | string | null
    usuarioId?: IntNullableWithAggregatesFilter<"Atesto"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Atesto"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Atesto"> | Date | string
  }

  export type FaturaWhereInput = {
    AND?: FaturaWhereInput | FaturaWhereInput[]
    OR?: FaturaWhereInput[]
    NOT?: FaturaWhereInput | FaturaWhereInput[]
    id?: IntFilter<"Fatura"> | number
    transporteId?: IntFilter<"Fatura"> | number
    numeroFatura?: StringFilter<"Fatura"> | string
    valor?: DecimalFilter<"Fatura"> | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeFilter<"Fatura"> | Date | string
    dataVencimento?: DateTimeFilter<"Fatura"> | Date | string
    status?: EnumStatusFaturaFilter<"Fatura"> | $Enums.StatusFatura
    linkBoleto?: StringNullableFilter<"Fatura"> | string | null
    createdAt?: DateTimeFilter<"Fatura"> | Date | string
    updatedAt?: DateTimeFilter<"Fatura"> | Date | string
    transporte?: XOR<TransporteScalarRelationFilter, TransporteWhereInput>
  }

  export type FaturaOrderByWithRelationInput = {
    id?: SortOrder
    transporteId?: SortOrder
    numeroFatura?: SortOrder
    valor?: SortOrder
    dataEmissao?: SortOrder
    dataVencimento?: SortOrder
    status?: SortOrder
    linkBoleto?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    transporte?: TransporteOrderByWithRelationInput
  }

  export type FaturaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    numeroFatura?: string
    AND?: FaturaWhereInput | FaturaWhereInput[]
    OR?: FaturaWhereInput[]
    NOT?: FaturaWhereInput | FaturaWhereInput[]
    transporteId?: IntFilter<"Fatura"> | number
    valor?: DecimalFilter<"Fatura"> | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeFilter<"Fatura"> | Date | string
    dataVencimento?: DateTimeFilter<"Fatura"> | Date | string
    status?: EnumStatusFaturaFilter<"Fatura"> | $Enums.StatusFatura
    linkBoleto?: StringNullableFilter<"Fatura"> | string | null
    createdAt?: DateTimeFilter<"Fatura"> | Date | string
    updatedAt?: DateTimeFilter<"Fatura"> | Date | string
    transporte?: XOR<TransporteScalarRelationFilter, TransporteWhereInput>
  }, "id" | "numeroFatura">

  export type FaturaOrderByWithAggregationInput = {
    id?: SortOrder
    transporteId?: SortOrder
    numeroFatura?: SortOrder
    valor?: SortOrder
    dataEmissao?: SortOrder
    dataVencimento?: SortOrder
    status?: SortOrder
    linkBoleto?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FaturaCountOrderByAggregateInput
    _avg?: FaturaAvgOrderByAggregateInput
    _max?: FaturaMaxOrderByAggregateInput
    _min?: FaturaMinOrderByAggregateInput
    _sum?: FaturaSumOrderByAggregateInput
  }

  export type FaturaScalarWhereWithAggregatesInput = {
    AND?: FaturaScalarWhereWithAggregatesInput | FaturaScalarWhereWithAggregatesInput[]
    OR?: FaturaScalarWhereWithAggregatesInput[]
    NOT?: FaturaScalarWhereWithAggregatesInput | FaturaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Fatura"> | number
    transporteId?: IntWithAggregatesFilter<"Fatura"> | number
    numeroFatura?: StringWithAggregatesFilter<"Fatura"> | string
    valor?: DecimalWithAggregatesFilter<"Fatura"> | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeWithAggregatesFilter<"Fatura"> | Date | string
    dataVencimento?: DateTimeWithAggregatesFilter<"Fatura"> | Date | string
    status?: EnumStatusFaturaWithAggregatesFilter<"Fatura"> | $Enums.StatusFatura
    linkBoleto?: StringNullableWithAggregatesFilter<"Fatura"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Fatura"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Fatura"> | Date | string
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    nome?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    senhaHash?: StringFilter<"Usuario"> | string
    papel?: EnumPapelUsuarioFilter<"Usuario"> | $Enums.PapelUsuario
    ativo?: BoolFilter<"Usuario"> | boolean
    createdAt?: DateTimeFilter<"Usuario"> | Date | string
    updatedAt?: DateTimeFilter<"Usuario"> | Date | string
    atestos?: AtestoListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senhaHash?: SortOrder
    papel?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    atestos?: AtestoOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nome?: StringFilter<"Usuario"> | string
    senhaHash?: StringFilter<"Usuario"> | string
    papel?: EnumPapelUsuarioFilter<"Usuario"> | $Enums.PapelUsuario
    ativo?: BoolFilter<"Usuario"> | boolean
    createdAt?: DateTimeFilter<"Usuario"> | Date | string
    updatedAt?: DateTimeFilter<"Usuario"> | Date | string
    atestos?: AtestoListRelationFilter
  }, "id" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senhaHash?: SortOrder
    papel?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    nome?: StringWithAggregatesFilter<"Usuario"> | string
    email?: StringWithAggregatesFilter<"Usuario"> | string
    senhaHash?: StringWithAggregatesFilter<"Usuario"> | string
    papel?: EnumPapelUsuarioWithAggregatesFilter<"Usuario"> | $Enums.PapelUsuario
    ativo?: BoolWithAggregatesFilter<"Usuario"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
  }

  export type DespesaWhereInput = {
    AND?: DespesaWhereInput | DespesaWhereInput[]
    OR?: DespesaWhereInput[]
    NOT?: DespesaWhereInput | DespesaWhereInput[]
    id?: IntFilter<"Despesa"> | number
    categoria?: EnumCategoriaDespesaFilter<"Despesa"> | $Enums.CategoriaDespesa
    valor?: DecimalFilter<"Despesa"> | Decimal | DecimalJsLike | number | string
    data?: DateTimeFilter<"Despesa"> | Date | string
    descricao?: StringNullableFilter<"Despesa"> | string | null
    centroCustoId?: IntNullableFilter<"Despesa"> | number | null
    createdAt?: DateTimeFilter<"Despesa"> | Date | string
    updatedAt?: DateTimeFilter<"Despesa"> | Date | string
    centroCusto?: XOR<CentroCustoNullableScalarRelationFilter, CentroCustoWhereInput> | null
  }

  export type DespesaOrderByWithRelationInput = {
    id?: SortOrder
    categoria?: SortOrder
    valor?: SortOrder
    data?: SortOrder
    descricao?: SortOrderInput | SortOrder
    centroCustoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    centroCusto?: CentroCustoOrderByWithRelationInput
  }

  export type DespesaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DespesaWhereInput | DespesaWhereInput[]
    OR?: DespesaWhereInput[]
    NOT?: DespesaWhereInput | DespesaWhereInput[]
    categoria?: EnumCategoriaDespesaFilter<"Despesa"> | $Enums.CategoriaDespesa
    valor?: DecimalFilter<"Despesa"> | Decimal | DecimalJsLike | number | string
    data?: DateTimeFilter<"Despesa"> | Date | string
    descricao?: StringNullableFilter<"Despesa"> | string | null
    centroCustoId?: IntNullableFilter<"Despesa"> | number | null
    createdAt?: DateTimeFilter<"Despesa"> | Date | string
    updatedAt?: DateTimeFilter<"Despesa"> | Date | string
    centroCusto?: XOR<CentroCustoNullableScalarRelationFilter, CentroCustoWhereInput> | null
  }, "id">

  export type DespesaOrderByWithAggregationInput = {
    id?: SortOrder
    categoria?: SortOrder
    valor?: SortOrder
    data?: SortOrder
    descricao?: SortOrderInput | SortOrder
    centroCustoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DespesaCountOrderByAggregateInput
    _avg?: DespesaAvgOrderByAggregateInput
    _max?: DespesaMaxOrderByAggregateInput
    _min?: DespesaMinOrderByAggregateInput
    _sum?: DespesaSumOrderByAggregateInput
  }

  export type DespesaScalarWhereWithAggregatesInput = {
    AND?: DespesaScalarWhereWithAggregatesInput | DespesaScalarWhereWithAggregatesInput[]
    OR?: DespesaScalarWhereWithAggregatesInput[]
    NOT?: DespesaScalarWhereWithAggregatesInput | DespesaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Despesa"> | number
    categoria?: EnumCategoriaDespesaWithAggregatesFilter<"Despesa"> | $Enums.CategoriaDespesa
    valor?: DecimalWithAggregatesFilter<"Despesa"> | Decimal | DecimalJsLike | number | string
    data?: DateTimeWithAggregatesFilter<"Despesa"> | Date | string
    descricao?: StringNullableWithAggregatesFilter<"Despesa"> | string | null
    centroCustoId?: IntNullableWithAggregatesFilter<"Despesa"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Despesa"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Despesa"> | Date | string
  }

  export type CentroCustoWhereInput = {
    AND?: CentroCustoWhereInput | CentroCustoWhereInput[]
    OR?: CentroCustoWhereInput[]
    NOT?: CentroCustoWhereInput | CentroCustoWhereInput[]
    id?: IntFilter<"CentroCusto"> | number
    nome?: StringFilter<"CentroCusto"> | string
    descricao?: StringNullableFilter<"CentroCusto"> | string | null
    createdAt?: DateTimeFilter<"CentroCusto"> | Date | string
    updatedAt?: DateTimeFilter<"CentroCusto"> | Date | string
    despesas?: DespesaListRelationFilter
  }

  export type CentroCustoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    despesas?: DespesaOrderByRelationAggregateInput
  }

  export type CentroCustoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome?: string
    AND?: CentroCustoWhereInput | CentroCustoWhereInput[]
    OR?: CentroCustoWhereInput[]
    NOT?: CentroCustoWhereInput | CentroCustoWhereInput[]
    descricao?: StringNullableFilter<"CentroCusto"> | string | null
    createdAt?: DateTimeFilter<"CentroCusto"> | Date | string
    updatedAt?: DateTimeFilter<"CentroCusto"> | Date | string
    despesas?: DespesaListRelationFilter
  }, "id" | "nome">

  export type CentroCustoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CentroCustoCountOrderByAggregateInput
    _avg?: CentroCustoAvgOrderByAggregateInput
    _max?: CentroCustoMaxOrderByAggregateInput
    _min?: CentroCustoMinOrderByAggregateInput
    _sum?: CentroCustoSumOrderByAggregateInput
  }

  export type CentroCustoScalarWhereWithAggregatesInput = {
    AND?: CentroCustoScalarWhereWithAggregatesInput | CentroCustoScalarWhereWithAggregatesInput[]
    OR?: CentroCustoScalarWhereWithAggregatesInput[]
    NOT?: CentroCustoScalarWhereWithAggregatesInput | CentroCustoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CentroCusto"> | number
    nome?: StringWithAggregatesFilter<"CentroCusto"> | string
    descricao?: StringNullableWithAggregatesFilter<"CentroCusto"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CentroCusto"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CentroCusto"> | Date | string
  }

  export type ClienteCreateInput = {
    nome: string
    cnpjCpf?: string | null
    tipo: $Enums.TipoCliente
    email?: string | null
    telefone?: string | null
    endereco?: string | null
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    transportes?: TransporteCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateInput = {
    id?: number
    nome: string
    cnpjCpf?: string | null
    tipo: $Enums.TipoCliente
    email?: string | null
    telefone?: string | null
    endereco?: string | null
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    transportes?: TransporteUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpjCpf?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transportes?: TransporteUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpjCpf?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transportes?: TransporteUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteCreateManyInput = {
    id?: number
    nome: string
    cnpjCpf?: string | null
    tipo: $Enums.TipoCliente
    email?: string | null
    telefone?: string | null
    endereco?: string | null
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ClienteUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpjCpf?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpjCpf?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransporteCreateInput = {
    numeroCteOc: string
    dataOperacao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: Date | string | null
    dataVencimento?: Date | string | null
    dataAtesto?: Date | string | null
    dataNotaFiscal?: Date | string | null
    descricaoNotaFiscal?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    cliente: ClienteCreateNestedOneWithoutTransportesInput
    atestos?: AtestoCreateNestedManyWithoutTransporteInput
    faturas?: FaturaCreateNestedManyWithoutTransporteInput
  }

  export type TransporteUncheckedCreateInput = {
    id?: number
    clienteId: number
    numeroCteOc: string
    dataOperacao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: Date | string | null
    dataVencimento?: Date | string | null
    dataAtesto?: Date | string | null
    dataNotaFiscal?: Date | string | null
    descricaoNotaFiscal?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    atestos?: AtestoUncheckedCreateNestedManyWithoutTransporteInput
    faturas?: FaturaUncheckedCreateNestedManyWithoutTransporteInput
  }

  export type TransporteUpdateInput = {
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutTransportesNestedInput
    atestos?: AtestoUpdateManyWithoutTransporteNestedInput
    faturas?: FaturaUpdateManyWithoutTransporteNestedInput
  }

  export type TransporteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    atestos?: AtestoUncheckedUpdateManyWithoutTransporteNestedInput
    faturas?: FaturaUncheckedUpdateManyWithoutTransporteNestedInput
  }

  export type TransporteCreateManyInput = {
    id?: number
    clienteId: number
    numeroCteOc: string
    dataOperacao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: Date | string | null
    dataVencimento?: Date | string | null
    dataAtesto?: Date | string | null
    dataNotaFiscal?: Date | string | null
    descricaoNotaFiscal?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransporteUpdateManyMutationInput = {
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransporteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtestoCreateInput = {
    dataAtesto: Date | string
    tipo: $Enums.TipoAtesto
    observacao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transporte: TransporteCreateNestedOneWithoutAtestosInput
    usuario?: UsuarioCreateNestedOneWithoutAtestosInput
  }

  export type AtestoUncheckedCreateInput = {
    id?: number
    transporteId: number
    dataAtesto: Date | string
    tipo: $Enums.TipoAtesto
    observacao?: string | null
    usuarioId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AtestoUpdateInput = {
    dataAtesto?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoAtestoFieldUpdateOperationsInput | $Enums.TipoAtesto
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transporte?: TransporteUpdateOneRequiredWithoutAtestosNestedInput
    usuario?: UsuarioUpdateOneWithoutAtestosNestedInput
  }

  export type AtestoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    transporteId?: IntFieldUpdateOperationsInput | number
    dataAtesto?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoAtestoFieldUpdateOperationsInput | $Enums.TipoAtesto
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtestoCreateManyInput = {
    id?: number
    transporteId: number
    dataAtesto: Date | string
    tipo: $Enums.TipoAtesto
    observacao?: string | null
    usuarioId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AtestoUpdateManyMutationInput = {
    dataAtesto?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoAtestoFieldUpdateOperationsInput | $Enums.TipoAtesto
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtestoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    transporteId?: IntFieldUpdateOperationsInput | number
    dataAtesto?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoAtestoFieldUpdateOperationsInput | $Enums.TipoAtesto
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FaturaCreateInput = {
    numeroFatura: string
    valor: Decimal | DecimalJsLike | number | string
    dataEmissao: Date | string
    dataVencimento: Date | string
    status: $Enums.StatusFatura
    linkBoleto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transporte: TransporteCreateNestedOneWithoutFaturasInput
  }

  export type FaturaUncheckedCreateInput = {
    id?: number
    transporteId: number
    numeroFatura: string
    valor: Decimal | DecimalJsLike | number | string
    dataEmissao: Date | string
    dataVencimento: Date | string
    status: $Enums.StatusFatura
    linkBoleto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FaturaUpdateInput = {
    numeroFatura?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusFaturaFieldUpdateOperationsInput | $Enums.StatusFatura
    linkBoleto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transporte?: TransporteUpdateOneRequiredWithoutFaturasNestedInput
  }

  export type FaturaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    transporteId?: IntFieldUpdateOperationsInput | number
    numeroFatura?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusFaturaFieldUpdateOperationsInput | $Enums.StatusFatura
    linkBoleto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FaturaCreateManyInput = {
    id?: number
    transporteId: number
    numeroFatura: string
    valor: Decimal | DecimalJsLike | number | string
    dataEmissao: Date | string
    dataVencimento: Date | string
    status: $Enums.StatusFatura
    linkBoleto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FaturaUpdateManyMutationInput = {
    numeroFatura?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusFaturaFieldUpdateOperationsInput | $Enums.StatusFatura
    linkBoleto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FaturaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    transporteId?: IntFieldUpdateOperationsInput | number
    numeroFatura?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusFaturaFieldUpdateOperationsInput | $Enums.StatusFatura
    linkBoleto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioCreateInput = {
    nome: string
    email: string
    senhaHash: string
    papel: $Enums.PapelUsuario
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    atestos?: AtestoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    nome: string
    email: string
    senhaHash: string
    papel: $Enums.PapelUsuario
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    atestos?: AtestoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senhaHash?: StringFieldUpdateOperationsInput | string
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    atestos?: AtestoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senhaHash?: StringFieldUpdateOperationsInput | string
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    atestos?: AtestoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    nome: string
    email: string
    senhaHash: string
    papel: $Enums.PapelUsuario
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UsuarioUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senhaHash?: StringFieldUpdateOperationsInput | string
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senhaHash?: StringFieldUpdateOperationsInput | string
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DespesaCreateInput = {
    categoria: $Enums.CategoriaDespesa
    valor: Decimal | DecimalJsLike | number | string
    data: Date | string
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    centroCusto?: CentroCustoCreateNestedOneWithoutDespesasInput
  }

  export type DespesaUncheckedCreateInput = {
    id?: number
    categoria: $Enums.CategoriaDespesa
    valor: Decimal | DecimalJsLike | number | string
    data: Date | string
    descricao?: string | null
    centroCustoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DespesaUpdateInput = {
    categoria?: EnumCategoriaDespesaFieldUpdateOperationsInput | $Enums.CategoriaDespesa
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    centroCusto?: CentroCustoUpdateOneWithoutDespesasNestedInput
  }

  export type DespesaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoria?: EnumCategoriaDespesaFieldUpdateOperationsInput | $Enums.CategoriaDespesa
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    centroCustoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DespesaCreateManyInput = {
    id?: number
    categoria: $Enums.CategoriaDespesa
    valor: Decimal | DecimalJsLike | number | string
    data: Date | string
    descricao?: string | null
    centroCustoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DespesaUpdateManyMutationInput = {
    categoria?: EnumCategoriaDespesaFieldUpdateOperationsInput | $Enums.CategoriaDespesa
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DespesaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoria?: EnumCategoriaDespesaFieldUpdateOperationsInput | $Enums.CategoriaDespesa
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    centroCustoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CentroCustoCreateInput = {
    nome: string
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    despesas?: DespesaCreateNestedManyWithoutCentroCustoInput
  }

  export type CentroCustoUncheckedCreateInput = {
    id?: number
    nome: string
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    despesas?: DespesaUncheckedCreateNestedManyWithoutCentroCustoInput
  }

  export type CentroCustoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    despesas?: DespesaUpdateManyWithoutCentroCustoNestedInput
  }

  export type CentroCustoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    despesas?: DespesaUncheckedUpdateManyWithoutCentroCustoNestedInput
  }

  export type CentroCustoCreateManyInput = {
    id?: number
    nome: string
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CentroCustoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CentroCustoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumTipoClienteFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCliente | EnumTipoClienteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoClienteFilter<$PrismaModel> | $Enums.TipoCliente
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type TransporteListRelationFilter = {
    every?: TransporteWhereInput
    some?: TransporteWhereInput
    none?: TransporteWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type TransporteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClienteCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cnpjCpf?: SortOrder
    tipo?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    endereco?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClienteAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ClienteMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cnpjCpf?: SortOrder
    tipo?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    endereco?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClienteMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cnpjCpf?: SortOrder
    tipo?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    endereco?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ClienteSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumTipoClienteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCliente | EnumTipoClienteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoClienteWithAggregatesFilter<$PrismaModel> | $Enums.TipoCliente
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoClienteFilter<$PrismaModel>
    _max?: NestedEnumTipoClienteFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ClienteScalarRelationFilter = {
    is?: ClienteWhereInput
    isNot?: ClienteWhereInput
  }

  export type AtestoListRelationFilter = {
    every?: AtestoWhereInput
    some?: AtestoWhereInput
    none?: AtestoWhereInput
  }

  export type FaturaListRelationFilter = {
    every?: FaturaWhereInput
    some?: FaturaWhereInput
    none?: FaturaWhereInput
  }

  export type AtestoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FaturaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransporteCountOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    numeroCteOc?: SortOrder
    dataOperacao?: SortOrder
    valorTotal?: SortOrder
    dataEnvioFaturamento?: SortOrder
    dataVencimento?: SortOrder
    dataAtesto?: SortOrder
    dataNotaFiscal?: SortOrder
    descricaoNotaFiscal?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransporteAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    valorTotal?: SortOrder
  }

  export type TransporteMaxOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    numeroCteOc?: SortOrder
    dataOperacao?: SortOrder
    valorTotal?: SortOrder
    dataEnvioFaturamento?: SortOrder
    dataVencimento?: SortOrder
    dataAtesto?: SortOrder
    dataNotaFiscal?: SortOrder
    descricaoNotaFiscal?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransporteMinOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    numeroCteOc?: SortOrder
    dataOperacao?: SortOrder
    valorTotal?: SortOrder
    dataEnvioFaturamento?: SortOrder
    dataVencimento?: SortOrder
    dataAtesto?: SortOrder
    dataNotaFiscal?: SortOrder
    descricaoNotaFiscal?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransporteSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    valorTotal?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumTipoAtestoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAtesto | EnumTipoAtestoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAtesto[] | ListEnumTipoAtestoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAtesto[] | ListEnumTipoAtestoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAtestoFilter<$PrismaModel> | $Enums.TipoAtesto
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type TransporteScalarRelationFilter = {
    is?: TransporteWhereInput
    isNot?: TransporteWhereInput
  }

  export type UsuarioNullableScalarRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type AtestoCountOrderByAggregateInput = {
    id?: SortOrder
    transporteId?: SortOrder
    dataAtesto?: SortOrder
    tipo?: SortOrder
    observacao?: SortOrder
    usuarioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AtestoAvgOrderByAggregateInput = {
    id?: SortOrder
    transporteId?: SortOrder
    usuarioId?: SortOrder
  }

  export type AtestoMaxOrderByAggregateInput = {
    id?: SortOrder
    transporteId?: SortOrder
    dataAtesto?: SortOrder
    tipo?: SortOrder
    observacao?: SortOrder
    usuarioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AtestoMinOrderByAggregateInput = {
    id?: SortOrder
    transporteId?: SortOrder
    dataAtesto?: SortOrder
    tipo?: SortOrder
    observacao?: SortOrder
    usuarioId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AtestoSumOrderByAggregateInput = {
    id?: SortOrder
    transporteId?: SortOrder
    usuarioId?: SortOrder
  }

  export type EnumTipoAtestoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAtesto | EnumTipoAtestoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAtesto[] | ListEnumTipoAtestoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAtesto[] | ListEnumTipoAtestoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAtestoWithAggregatesFilter<$PrismaModel> | $Enums.TipoAtesto
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoAtestoFilter<$PrismaModel>
    _max?: NestedEnumTipoAtestoFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumStatusFaturaFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusFatura | EnumStatusFaturaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusFatura[] | ListEnumStatusFaturaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusFatura[] | ListEnumStatusFaturaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusFaturaFilter<$PrismaModel> | $Enums.StatusFatura
  }

  export type FaturaCountOrderByAggregateInput = {
    id?: SortOrder
    transporteId?: SortOrder
    numeroFatura?: SortOrder
    valor?: SortOrder
    dataEmissao?: SortOrder
    dataVencimento?: SortOrder
    status?: SortOrder
    linkBoleto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FaturaAvgOrderByAggregateInput = {
    id?: SortOrder
    transporteId?: SortOrder
    valor?: SortOrder
  }

  export type FaturaMaxOrderByAggregateInput = {
    id?: SortOrder
    transporteId?: SortOrder
    numeroFatura?: SortOrder
    valor?: SortOrder
    dataEmissao?: SortOrder
    dataVencimento?: SortOrder
    status?: SortOrder
    linkBoleto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FaturaMinOrderByAggregateInput = {
    id?: SortOrder
    transporteId?: SortOrder
    numeroFatura?: SortOrder
    valor?: SortOrder
    dataEmissao?: SortOrder
    dataVencimento?: SortOrder
    status?: SortOrder
    linkBoleto?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FaturaSumOrderByAggregateInput = {
    id?: SortOrder
    transporteId?: SortOrder
    valor?: SortOrder
  }

  export type EnumStatusFaturaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusFatura | EnumStatusFaturaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusFatura[] | ListEnumStatusFaturaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusFatura[] | ListEnumStatusFaturaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusFaturaWithAggregatesFilter<$PrismaModel> | $Enums.StatusFatura
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusFaturaFilter<$PrismaModel>
    _max?: NestedEnumStatusFaturaFilter<$PrismaModel>
  }

  export type EnumPapelUsuarioFilter<$PrismaModel = never> = {
    equals?: $Enums.PapelUsuario | EnumPapelUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumPapelUsuarioFilter<$PrismaModel> | $Enums.PapelUsuario
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senhaHash?: SortOrder
    papel?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senhaHash?: SortOrder
    papel?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senhaHash?: SortOrder
    papel?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumPapelUsuarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PapelUsuario | EnumPapelUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumPapelUsuarioWithAggregatesFilter<$PrismaModel> | $Enums.PapelUsuario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPapelUsuarioFilter<$PrismaModel>
    _max?: NestedEnumPapelUsuarioFilter<$PrismaModel>
  }

  export type EnumCategoriaDespesaFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaDespesa | EnumCategoriaDespesaFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaDespesa[] | ListEnumCategoriaDespesaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaDespesa[] | ListEnumCategoriaDespesaFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaDespesaFilter<$PrismaModel> | $Enums.CategoriaDespesa
  }

  export type CentroCustoNullableScalarRelationFilter = {
    is?: CentroCustoWhereInput | null
    isNot?: CentroCustoWhereInput | null
  }

  export type DespesaCountOrderByAggregateInput = {
    id?: SortOrder
    categoria?: SortOrder
    valor?: SortOrder
    data?: SortOrder
    descricao?: SortOrder
    centroCustoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DespesaAvgOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    centroCustoId?: SortOrder
  }

  export type DespesaMaxOrderByAggregateInput = {
    id?: SortOrder
    categoria?: SortOrder
    valor?: SortOrder
    data?: SortOrder
    descricao?: SortOrder
    centroCustoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DespesaMinOrderByAggregateInput = {
    id?: SortOrder
    categoria?: SortOrder
    valor?: SortOrder
    data?: SortOrder
    descricao?: SortOrder
    centroCustoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DespesaSumOrderByAggregateInput = {
    id?: SortOrder
    valor?: SortOrder
    centroCustoId?: SortOrder
  }

  export type EnumCategoriaDespesaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaDespesa | EnumCategoriaDespesaFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaDespesa[] | ListEnumCategoriaDespesaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaDespesa[] | ListEnumCategoriaDespesaFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaDespesaWithAggregatesFilter<$PrismaModel> | $Enums.CategoriaDespesa
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriaDespesaFilter<$PrismaModel>
    _max?: NestedEnumCategoriaDespesaFilter<$PrismaModel>
  }

  export type DespesaListRelationFilter = {
    every?: DespesaWhereInput
    some?: DespesaWhereInput
    none?: DespesaWhereInput
  }

  export type DespesaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CentroCustoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CentroCustoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CentroCustoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CentroCustoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CentroCustoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TransporteCreateNestedManyWithoutClienteInput = {
    create?: XOR<TransporteCreateWithoutClienteInput, TransporteUncheckedCreateWithoutClienteInput> | TransporteCreateWithoutClienteInput[] | TransporteUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TransporteCreateOrConnectWithoutClienteInput | TransporteCreateOrConnectWithoutClienteInput[]
    createMany?: TransporteCreateManyClienteInputEnvelope
    connect?: TransporteWhereUniqueInput | TransporteWhereUniqueInput[]
  }

  export type TransporteUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<TransporteCreateWithoutClienteInput, TransporteUncheckedCreateWithoutClienteInput> | TransporteCreateWithoutClienteInput[] | TransporteUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TransporteCreateOrConnectWithoutClienteInput | TransporteCreateOrConnectWithoutClienteInput[]
    createMany?: TransporteCreateManyClienteInputEnvelope
    connect?: TransporteWhereUniqueInput | TransporteWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumTipoClienteFieldUpdateOperationsInput = {
    set?: $Enums.TipoCliente
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type TransporteUpdateManyWithoutClienteNestedInput = {
    create?: XOR<TransporteCreateWithoutClienteInput, TransporteUncheckedCreateWithoutClienteInput> | TransporteCreateWithoutClienteInput[] | TransporteUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TransporteCreateOrConnectWithoutClienteInput | TransporteCreateOrConnectWithoutClienteInput[]
    upsert?: TransporteUpsertWithWhereUniqueWithoutClienteInput | TransporteUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: TransporteCreateManyClienteInputEnvelope
    set?: TransporteWhereUniqueInput | TransporteWhereUniqueInput[]
    disconnect?: TransporteWhereUniqueInput | TransporteWhereUniqueInput[]
    delete?: TransporteWhereUniqueInput | TransporteWhereUniqueInput[]
    connect?: TransporteWhereUniqueInput | TransporteWhereUniqueInput[]
    update?: TransporteUpdateWithWhereUniqueWithoutClienteInput | TransporteUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: TransporteUpdateManyWithWhereWithoutClienteInput | TransporteUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: TransporteScalarWhereInput | TransporteScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type TransporteUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<TransporteCreateWithoutClienteInput, TransporteUncheckedCreateWithoutClienteInput> | TransporteCreateWithoutClienteInput[] | TransporteUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TransporteCreateOrConnectWithoutClienteInput | TransporteCreateOrConnectWithoutClienteInput[]
    upsert?: TransporteUpsertWithWhereUniqueWithoutClienteInput | TransporteUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: TransporteCreateManyClienteInputEnvelope
    set?: TransporteWhereUniqueInput | TransporteWhereUniqueInput[]
    disconnect?: TransporteWhereUniqueInput | TransporteWhereUniqueInput[]
    delete?: TransporteWhereUniqueInput | TransporteWhereUniqueInput[]
    connect?: TransporteWhereUniqueInput | TransporteWhereUniqueInput[]
    update?: TransporteUpdateWithWhereUniqueWithoutClienteInput | TransporteUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: TransporteUpdateManyWithWhereWithoutClienteInput | TransporteUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: TransporteScalarWhereInput | TransporteScalarWhereInput[]
  }

  export type ClienteCreateNestedOneWithoutTransportesInput = {
    create?: XOR<ClienteCreateWithoutTransportesInput, ClienteUncheckedCreateWithoutTransportesInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutTransportesInput
    connect?: ClienteWhereUniqueInput
  }

  export type AtestoCreateNestedManyWithoutTransporteInput = {
    create?: XOR<AtestoCreateWithoutTransporteInput, AtestoUncheckedCreateWithoutTransporteInput> | AtestoCreateWithoutTransporteInput[] | AtestoUncheckedCreateWithoutTransporteInput[]
    connectOrCreate?: AtestoCreateOrConnectWithoutTransporteInput | AtestoCreateOrConnectWithoutTransporteInput[]
    createMany?: AtestoCreateManyTransporteInputEnvelope
    connect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
  }

  export type FaturaCreateNestedManyWithoutTransporteInput = {
    create?: XOR<FaturaCreateWithoutTransporteInput, FaturaUncheckedCreateWithoutTransporteInput> | FaturaCreateWithoutTransporteInput[] | FaturaUncheckedCreateWithoutTransporteInput[]
    connectOrCreate?: FaturaCreateOrConnectWithoutTransporteInput | FaturaCreateOrConnectWithoutTransporteInput[]
    createMany?: FaturaCreateManyTransporteInputEnvelope
    connect?: FaturaWhereUniqueInput | FaturaWhereUniqueInput[]
  }

  export type AtestoUncheckedCreateNestedManyWithoutTransporteInput = {
    create?: XOR<AtestoCreateWithoutTransporteInput, AtestoUncheckedCreateWithoutTransporteInput> | AtestoCreateWithoutTransporteInput[] | AtestoUncheckedCreateWithoutTransporteInput[]
    connectOrCreate?: AtestoCreateOrConnectWithoutTransporteInput | AtestoCreateOrConnectWithoutTransporteInput[]
    createMany?: AtestoCreateManyTransporteInputEnvelope
    connect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
  }

  export type FaturaUncheckedCreateNestedManyWithoutTransporteInput = {
    create?: XOR<FaturaCreateWithoutTransporteInput, FaturaUncheckedCreateWithoutTransporteInput> | FaturaCreateWithoutTransporteInput[] | FaturaUncheckedCreateWithoutTransporteInput[]
    connectOrCreate?: FaturaCreateOrConnectWithoutTransporteInput | FaturaCreateOrConnectWithoutTransporteInput[]
    createMany?: FaturaCreateManyTransporteInputEnvelope
    connect?: FaturaWhereUniqueInput | FaturaWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type ClienteUpdateOneRequiredWithoutTransportesNestedInput = {
    create?: XOR<ClienteCreateWithoutTransportesInput, ClienteUncheckedCreateWithoutTransportesInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutTransportesInput
    upsert?: ClienteUpsertWithoutTransportesInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutTransportesInput, ClienteUpdateWithoutTransportesInput>, ClienteUncheckedUpdateWithoutTransportesInput>
  }

  export type AtestoUpdateManyWithoutTransporteNestedInput = {
    create?: XOR<AtestoCreateWithoutTransporteInput, AtestoUncheckedCreateWithoutTransporteInput> | AtestoCreateWithoutTransporteInput[] | AtestoUncheckedCreateWithoutTransporteInput[]
    connectOrCreate?: AtestoCreateOrConnectWithoutTransporteInput | AtestoCreateOrConnectWithoutTransporteInput[]
    upsert?: AtestoUpsertWithWhereUniqueWithoutTransporteInput | AtestoUpsertWithWhereUniqueWithoutTransporteInput[]
    createMany?: AtestoCreateManyTransporteInputEnvelope
    set?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    disconnect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    delete?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    connect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    update?: AtestoUpdateWithWhereUniqueWithoutTransporteInput | AtestoUpdateWithWhereUniqueWithoutTransporteInput[]
    updateMany?: AtestoUpdateManyWithWhereWithoutTransporteInput | AtestoUpdateManyWithWhereWithoutTransporteInput[]
    deleteMany?: AtestoScalarWhereInput | AtestoScalarWhereInput[]
  }

  export type FaturaUpdateManyWithoutTransporteNestedInput = {
    create?: XOR<FaturaCreateWithoutTransporteInput, FaturaUncheckedCreateWithoutTransporteInput> | FaturaCreateWithoutTransporteInput[] | FaturaUncheckedCreateWithoutTransporteInput[]
    connectOrCreate?: FaturaCreateOrConnectWithoutTransporteInput | FaturaCreateOrConnectWithoutTransporteInput[]
    upsert?: FaturaUpsertWithWhereUniqueWithoutTransporteInput | FaturaUpsertWithWhereUniqueWithoutTransporteInput[]
    createMany?: FaturaCreateManyTransporteInputEnvelope
    set?: FaturaWhereUniqueInput | FaturaWhereUniqueInput[]
    disconnect?: FaturaWhereUniqueInput | FaturaWhereUniqueInput[]
    delete?: FaturaWhereUniqueInput | FaturaWhereUniqueInput[]
    connect?: FaturaWhereUniqueInput | FaturaWhereUniqueInput[]
    update?: FaturaUpdateWithWhereUniqueWithoutTransporteInput | FaturaUpdateWithWhereUniqueWithoutTransporteInput[]
    updateMany?: FaturaUpdateManyWithWhereWithoutTransporteInput | FaturaUpdateManyWithWhereWithoutTransporteInput[]
    deleteMany?: FaturaScalarWhereInput | FaturaScalarWhereInput[]
  }

  export type AtestoUncheckedUpdateManyWithoutTransporteNestedInput = {
    create?: XOR<AtestoCreateWithoutTransporteInput, AtestoUncheckedCreateWithoutTransporteInput> | AtestoCreateWithoutTransporteInput[] | AtestoUncheckedCreateWithoutTransporteInput[]
    connectOrCreate?: AtestoCreateOrConnectWithoutTransporteInput | AtestoCreateOrConnectWithoutTransporteInput[]
    upsert?: AtestoUpsertWithWhereUniqueWithoutTransporteInput | AtestoUpsertWithWhereUniqueWithoutTransporteInput[]
    createMany?: AtestoCreateManyTransporteInputEnvelope
    set?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    disconnect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    delete?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    connect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    update?: AtestoUpdateWithWhereUniqueWithoutTransporteInput | AtestoUpdateWithWhereUniqueWithoutTransporteInput[]
    updateMany?: AtestoUpdateManyWithWhereWithoutTransporteInput | AtestoUpdateManyWithWhereWithoutTransporteInput[]
    deleteMany?: AtestoScalarWhereInput | AtestoScalarWhereInput[]
  }

  export type FaturaUncheckedUpdateManyWithoutTransporteNestedInput = {
    create?: XOR<FaturaCreateWithoutTransporteInput, FaturaUncheckedCreateWithoutTransporteInput> | FaturaCreateWithoutTransporteInput[] | FaturaUncheckedCreateWithoutTransporteInput[]
    connectOrCreate?: FaturaCreateOrConnectWithoutTransporteInput | FaturaCreateOrConnectWithoutTransporteInput[]
    upsert?: FaturaUpsertWithWhereUniqueWithoutTransporteInput | FaturaUpsertWithWhereUniqueWithoutTransporteInput[]
    createMany?: FaturaCreateManyTransporteInputEnvelope
    set?: FaturaWhereUniqueInput | FaturaWhereUniqueInput[]
    disconnect?: FaturaWhereUniqueInput | FaturaWhereUniqueInput[]
    delete?: FaturaWhereUniqueInput | FaturaWhereUniqueInput[]
    connect?: FaturaWhereUniqueInput | FaturaWhereUniqueInput[]
    update?: FaturaUpdateWithWhereUniqueWithoutTransporteInput | FaturaUpdateWithWhereUniqueWithoutTransporteInput[]
    updateMany?: FaturaUpdateManyWithWhereWithoutTransporteInput | FaturaUpdateManyWithWhereWithoutTransporteInput[]
    deleteMany?: FaturaScalarWhereInput | FaturaScalarWhereInput[]
  }

  export type TransporteCreateNestedOneWithoutAtestosInput = {
    create?: XOR<TransporteCreateWithoutAtestosInput, TransporteUncheckedCreateWithoutAtestosInput>
    connectOrCreate?: TransporteCreateOrConnectWithoutAtestosInput
    connect?: TransporteWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutAtestosInput = {
    create?: XOR<UsuarioCreateWithoutAtestosInput, UsuarioUncheckedCreateWithoutAtestosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAtestosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EnumTipoAtestoFieldUpdateOperationsInput = {
    set?: $Enums.TipoAtesto
  }

  export type TransporteUpdateOneRequiredWithoutAtestosNestedInput = {
    create?: XOR<TransporteCreateWithoutAtestosInput, TransporteUncheckedCreateWithoutAtestosInput>
    connectOrCreate?: TransporteCreateOrConnectWithoutAtestosInput
    upsert?: TransporteUpsertWithoutAtestosInput
    connect?: TransporteWhereUniqueInput
    update?: XOR<XOR<TransporteUpdateToOneWithWhereWithoutAtestosInput, TransporteUpdateWithoutAtestosInput>, TransporteUncheckedUpdateWithoutAtestosInput>
  }

  export type UsuarioUpdateOneWithoutAtestosNestedInput = {
    create?: XOR<UsuarioCreateWithoutAtestosInput, UsuarioUncheckedCreateWithoutAtestosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutAtestosInput
    upsert?: UsuarioUpsertWithoutAtestosInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutAtestosInput, UsuarioUpdateWithoutAtestosInput>, UsuarioUncheckedUpdateWithoutAtestosInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type TransporteCreateNestedOneWithoutFaturasInput = {
    create?: XOR<TransporteCreateWithoutFaturasInput, TransporteUncheckedCreateWithoutFaturasInput>
    connectOrCreate?: TransporteCreateOrConnectWithoutFaturasInput
    connect?: TransporteWhereUniqueInput
  }

  export type EnumStatusFaturaFieldUpdateOperationsInput = {
    set?: $Enums.StatusFatura
  }

  export type TransporteUpdateOneRequiredWithoutFaturasNestedInput = {
    create?: XOR<TransporteCreateWithoutFaturasInput, TransporteUncheckedCreateWithoutFaturasInput>
    connectOrCreate?: TransporteCreateOrConnectWithoutFaturasInput
    upsert?: TransporteUpsertWithoutFaturasInput
    connect?: TransporteWhereUniqueInput
    update?: XOR<XOR<TransporteUpdateToOneWithWhereWithoutFaturasInput, TransporteUpdateWithoutFaturasInput>, TransporteUncheckedUpdateWithoutFaturasInput>
  }

  export type AtestoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<AtestoCreateWithoutUsuarioInput, AtestoUncheckedCreateWithoutUsuarioInput> | AtestoCreateWithoutUsuarioInput[] | AtestoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtestoCreateOrConnectWithoutUsuarioInput | AtestoCreateOrConnectWithoutUsuarioInput[]
    createMany?: AtestoCreateManyUsuarioInputEnvelope
    connect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
  }

  export type AtestoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<AtestoCreateWithoutUsuarioInput, AtestoUncheckedCreateWithoutUsuarioInput> | AtestoCreateWithoutUsuarioInput[] | AtestoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtestoCreateOrConnectWithoutUsuarioInput | AtestoCreateOrConnectWithoutUsuarioInput[]
    createMany?: AtestoCreateManyUsuarioInputEnvelope
    connect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
  }

  export type EnumPapelUsuarioFieldUpdateOperationsInput = {
    set?: $Enums.PapelUsuario
  }

  export type AtestoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<AtestoCreateWithoutUsuarioInput, AtestoUncheckedCreateWithoutUsuarioInput> | AtestoCreateWithoutUsuarioInput[] | AtestoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtestoCreateOrConnectWithoutUsuarioInput | AtestoCreateOrConnectWithoutUsuarioInput[]
    upsert?: AtestoUpsertWithWhereUniqueWithoutUsuarioInput | AtestoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: AtestoCreateManyUsuarioInputEnvelope
    set?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    disconnect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    delete?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    connect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    update?: AtestoUpdateWithWhereUniqueWithoutUsuarioInput | AtestoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: AtestoUpdateManyWithWhereWithoutUsuarioInput | AtestoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: AtestoScalarWhereInput | AtestoScalarWhereInput[]
  }

  export type AtestoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<AtestoCreateWithoutUsuarioInput, AtestoUncheckedCreateWithoutUsuarioInput> | AtestoCreateWithoutUsuarioInput[] | AtestoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AtestoCreateOrConnectWithoutUsuarioInput | AtestoCreateOrConnectWithoutUsuarioInput[]
    upsert?: AtestoUpsertWithWhereUniqueWithoutUsuarioInput | AtestoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: AtestoCreateManyUsuarioInputEnvelope
    set?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    disconnect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    delete?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    connect?: AtestoWhereUniqueInput | AtestoWhereUniqueInput[]
    update?: AtestoUpdateWithWhereUniqueWithoutUsuarioInput | AtestoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: AtestoUpdateManyWithWhereWithoutUsuarioInput | AtestoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: AtestoScalarWhereInput | AtestoScalarWhereInput[]
  }

  export type CentroCustoCreateNestedOneWithoutDespesasInput = {
    create?: XOR<CentroCustoCreateWithoutDespesasInput, CentroCustoUncheckedCreateWithoutDespesasInput>
    connectOrCreate?: CentroCustoCreateOrConnectWithoutDespesasInput
    connect?: CentroCustoWhereUniqueInput
  }

  export type EnumCategoriaDespesaFieldUpdateOperationsInput = {
    set?: $Enums.CategoriaDespesa
  }

  export type CentroCustoUpdateOneWithoutDespesasNestedInput = {
    create?: XOR<CentroCustoCreateWithoutDespesasInput, CentroCustoUncheckedCreateWithoutDespesasInput>
    connectOrCreate?: CentroCustoCreateOrConnectWithoutDespesasInput
    upsert?: CentroCustoUpsertWithoutDespesasInput
    disconnect?: CentroCustoWhereInput | boolean
    delete?: CentroCustoWhereInput | boolean
    connect?: CentroCustoWhereUniqueInput
    update?: XOR<XOR<CentroCustoUpdateToOneWithWhereWithoutDespesasInput, CentroCustoUpdateWithoutDespesasInput>, CentroCustoUncheckedUpdateWithoutDespesasInput>
  }

  export type DespesaCreateNestedManyWithoutCentroCustoInput = {
    create?: XOR<DespesaCreateWithoutCentroCustoInput, DespesaUncheckedCreateWithoutCentroCustoInput> | DespesaCreateWithoutCentroCustoInput[] | DespesaUncheckedCreateWithoutCentroCustoInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutCentroCustoInput | DespesaCreateOrConnectWithoutCentroCustoInput[]
    createMany?: DespesaCreateManyCentroCustoInputEnvelope
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
  }

  export type DespesaUncheckedCreateNestedManyWithoutCentroCustoInput = {
    create?: XOR<DespesaCreateWithoutCentroCustoInput, DespesaUncheckedCreateWithoutCentroCustoInput> | DespesaCreateWithoutCentroCustoInput[] | DespesaUncheckedCreateWithoutCentroCustoInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutCentroCustoInput | DespesaCreateOrConnectWithoutCentroCustoInput[]
    createMany?: DespesaCreateManyCentroCustoInputEnvelope
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
  }

  export type DespesaUpdateManyWithoutCentroCustoNestedInput = {
    create?: XOR<DespesaCreateWithoutCentroCustoInput, DespesaUncheckedCreateWithoutCentroCustoInput> | DespesaCreateWithoutCentroCustoInput[] | DespesaUncheckedCreateWithoutCentroCustoInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutCentroCustoInput | DespesaCreateOrConnectWithoutCentroCustoInput[]
    upsert?: DespesaUpsertWithWhereUniqueWithoutCentroCustoInput | DespesaUpsertWithWhereUniqueWithoutCentroCustoInput[]
    createMany?: DespesaCreateManyCentroCustoInputEnvelope
    set?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    disconnect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    delete?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    update?: DespesaUpdateWithWhereUniqueWithoutCentroCustoInput | DespesaUpdateWithWhereUniqueWithoutCentroCustoInput[]
    updateMany?: DespesaUpdateManyWithWhereWithoutCentroCustoInput | DespesaUpdateManyWithWhereWithoutCentroCustoInput[]
    deleteMany?: DespesaScalarWhereInput | DespesaScalarWhereInput[]
  }

  export type DespesaUncheckedUpdateManyWithoutCentroCustoNestedInput = {
    create?: XOR<DespesaCreateWithoutCentroCustoInput, DespesaUncheckedCreateWithoutCentroCustoInput> | DespesaCreateWithoutCentroCustoInput[] | DespesaUncheckedCreateWithoutCentroCustoInput[]
    connectOrCreate?: DespesaCreateOrConnectWithoutCentroCustoInput | DespesaCreateOrConnectWithoutCentroCustoInput[]
    upsert?: DespesaUpsertWithWhereUniqueWithoutCentroCustoInput | DespesaUpsertWithWhereUniqueWithoutCentroCustoInput[]
    createMany?: DespesaCreateManyCentroCustoInputEnvelope
    set?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    disconnect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    delete?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    connect?: DespesaWhereUniqueInput | DespesaWhereUniqueInput[]
    update?: DespesaUpdateWithWhereUniqueWithoutCentroCustoInput | DespesaUpdateWithWhereUniqueWithoutCentroCustoInput[]
    updateMany?: DespesaUpdateManyWithWhereWithoutCentroCustoInput | DespesaUpdateManyWithWhereWithoutCentroCustoInput[]
    deleteMany?: DespesaScalarWhereInput | DespesaScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumTipoClienteFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCliente | EnumTipoClienteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoClienteFilter<$PrismaModel> | $Enums.TipoCliente
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumTipoClienteWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoCliente | EnumTipoClienteFieldRefInput<$PrismaModel>
    in?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoCliente[] | ListEnumTipoClienteFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoClienteWithAggregatesFilter<$PrismaModel> | $Enums.TipoCliente
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoClienteFilter<$PrismaModel>
    _max?: NestedEnumTipoClienteFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumTipoAtestoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAtesto | EnumTipoAtestoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAtesto[] | ListEnumTipoAtestoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAtesto[] | ListEnumTipoAtestoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAtestoFilter<$PrismaModel> | $Enums.TipoAtesto
  }

  export type NestedEnumTipoAtestoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoAtesto | EnumTipoAtestoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoAtesto[] | ListEnumTipoAtestoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoAtesto[] | ListEnumTipoAtestoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoAtestoWithAggregatesFilter<$PrismaModel> | $Enums.TipoAtesto
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoAtestoFilter<$PrismaModel>
    _max?: NestedEnumTipoAtestoFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumStatusFaturaFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusFatura | EnumStatusFaturaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusFatura[] | ListEnumStatusFaturaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusFatura[] | ListEnumStatusFaturaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusFaturaFilter<$PrismaModel> | $Enums.StatusFatura
  }

  export type NestedEnumStatusFaturaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusFatura | EnumStatusFaturaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusFatura[] | ListEnumStatusFaturaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusFatura[] | ListEnumStatusFaturaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusFaturaWithAggregatesFilter<$PrismaModel> | $Enums.StatusFatura
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusFaturaFilter<$PrismaModel>
    _max?: NestedEnumStatusFaturaFilter<$PrismaModel>
  }

  export type NestedEnumPapelUsuarioFilter<$PrismaModel = never> = {
    equals?: $Enums.PapelUsuario | EnumPapelUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumPapelUsuarioFilter<$PrismaModel> | $Enums.PapelUsuario
  }

  export type NestedEnumPapelUsuarioWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PapelUsuario | EnumPapelUsuarioFieldRefInput<$PrismaModel>
    in?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    notIn?: $Enums.PapelUsuario[] | ListEnumPapelUsuarioFieldRefInput<$PrismaModel>
    not?: NestedEnumPapelUsuarioWithAggregatesFilter<$PrismaModel> | $Enums.PapelUsuario
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPapelUsuarioFilter<$PrismaModel>
    _max?: NestedEnumPapelUsuarioFilter<$PrismaModel>
  }

  export type NestedEnumCategoriaDespesaFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaDespesa | EnumCategoriaDespesaFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaDespesa[] | ListEnumCategoriaDespesaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaDespesa[] | ListEnumCategoriaDespesaFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaDespesaFilter<$PrismaModel> | $Enums.CategoriaDespesa
  }

  export type NestedEnumCategoriaDespesaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CategoriaDespesa | EnumCategoriaDespesaFieldRefInput<$PrismaModel>
    in?: $Enums.CategoriaDespesa[] | ListEnumCategoriaDespesaFieldRefInput<$PrismaModel>
    notIn?: $Enums.CategoriaDespesa[] | ListEnumCategoriaDespesaFieldRefInput<$PrismaModel>
    not?: NestedEnumCategoriaDespesaWithAggregatesFilter<$PrismaModel> | $Enums.CategoriaDespesa
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCategoriaDespesaFilter<$PrismaModel>
    _max?: NestedEnumCategoriaDespesaFilter<$PrismaModel>
  }

  export type TransporteCreateWithoutClienteInput = {
    numeroCteOc: string
    dataOperacao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: Date | string | null
    dataVencimento?: Date | string | null
    dataAtesto?: Date | string | null
    dataNotaFiscal?: Date | string | null
    descricaoNotaFiscal?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    atestos?: AtestoCreateNestedManyWithoutTransporteInput
    faturas?: FaturaCreateNestedManyWithoutTransporteInput
  }

  export type TransporteUncheckedCreateWithoutClienteInput = {
    id?: number
    numeroCteOc: string
    dataOperacao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: Date | string | null
    dataVencimento?: Date | string | null
    dataAtesto?: Date | string | null
    dataNotaFiscal?: Date | string | null
    descricaoNotaFiscal?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    atestos?: AtestoUncheckedCreateNestedManyWithoutTransporteInput
    faturas?: FaturaUncheckedCreateNestedManyWithoutTransporteInput
  }

  export type TransporteCreateOrConnectWithoutClienteInput = {
    where: TransporteWhereUniqueInput
    create: XOR<TransporteCreateWithoutClienteInput, TransporteUncheckedCreateWithoutClienteInput>
  }

  export type TransporteCreateManyClienteInputEnvelope = {
    data: TransporteCreateManyClienteInput | TransporteCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type TransporteUpsertWithWhereUniqueWithoutClienteInput = {
    where: TransporteWhereUniqueInput
    update: XOR<TransporteUpdateWithoutClienteInput, TransporteUncheckedUpdateWithoutClienteInput>
    create: XOR<TransporteCreateWithoutClienteInput, TransporteUncheckedCreateWithoutClienteInput>
  }

  export type TransporteUpdateWithWhereUniqueWithoutClienteInput = {
    where: TransporteWhereUniqueInput
    data: XOR<TransporteUpdateWithoutClienteInput, TransporteUncheckedUpdateWithoutClienteInput>
  }

  export type TransporteUpdateManyWithWhereWithoutClienteInput = {
    where: TransporteScalarWhereInput
    data: XOR<TransporteUpdateManyMutationInput, TransporteUncheckedUpdateManyWithoutClienteInput>
  }

  export type TransporteScalarWhereInput = {
    AND?: TransporteScalarWhereInput | TransporteScalarWhereInput[]
    OR?: TransporteScalarWhereInput[]
    NOT?: TransporteScalarWhereInput | TransporteScalarWhereInput[]
    id?: IntFilter<"Transporte"> | number
    clienteId?: IntFilter<"Transporte"> | number
    numeroCteOc?: StringFilter<"Transporte"> | string
    dataOperacao?: DateTimeFilter<"Transporte"> | Date | string
    valorTotal?: DecimalFilter<"Transporte"> | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    dataVencimento?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    dataAtesto?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    dataNotaFiscal?: DateTimeNullableFilter<"Transporte"> | Date | string | null
    descricaoNotaFiscal?: StringNullableFilter<"Transporte"> | string | null
    createdAt?: DateTimeFilter<"Transporte"> | Date | string
    updatedAt?: DateTimeFilter<"Transporte"> | Date | string
  }

  export type ClienteCreateWithoutTransportesInput = {
    nome: string
    cnpjCpf?: string | null
    tipo: $Enums.TipoCliente
    email?: string | null
    telefone?: string | null
    endereco?: string | null
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ClienteUncheckedCreateWithoutTransportesInput = {
    id?: number
    nome: string
    cnpjCpf?: string | null
    tipo: $Enums.TipoCliente
    email?: string | null
    telefone?: string | null
    endereco?: string | null
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ClienteCreateOrConnectWithoutTransportesInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutTransportesInput, ClienteUncheckedCreateWithoutTransportesInput>
  }

  export type AtestoCreateWithoutTransporteInput = {
    dataAtesto: Date | string
    tipo: $Enums.TipoAtesto
    observacao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usuario?: UsuarioCreateNestedOneWithoutAtestosInput
  }

  export type AtestoUncheckedCreateWithoutTransporteInput = {
    id?: number
    dataAtesto: Date | string
    tipo: $Enums.TipoAtesto
    observacao?: string | null
    usuarioId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AtestoCreateOrConnectWithoutTransporteInput = {
    where: AtestoWhereUniqueInput
    create: XOR<AtestoCreateWithoutTransporteInput, AtestoUncheckedCreateWithoutTransporteInput>
  }

  export type AtestoCreateManyTransporteInputEnvelope = {
    data: AtestoCreateManyTransporteInput | AtestoCreateManyTransporteInput[]
    skipDuplicates?: boolean
  }

  export type FaturaCreateWithoutTransporteInput = {
    numeroFatura: string
    valor: Decimal | DecimalJsLike | number | string
    dataEmissao: Date | string
    dataVencimento: Date | string
    status: $Enums.StatusFatura
    linkBoleto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FaturaUncheckedCreateWithoutTransporteInput = {
    id?: number
    numeroFatura: string
    valor: Decimal | DecimalJsLike | number | string
    dataEmissao: Date | string
    dataVencimento: Date | string
    status: $Enums.StatusFatura
    linkBoleto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FaturaCreateOrConnectWithoutTransporteInput = {
    where: FaturaWhereUniqueInput
    create: XOR<FaturaCreateWithoutTransporteInput, FaturaUncheckedCreateWithoutTransporteInput>
  }

  export type FaturaCreateManyTransporteInputEnvelope = {
    data: FaturaCreateManyTransporteInput | FaturaCreateManyTransporteInput[]
    skipDuplicates?: boolean
  }

  export type ClienteUpsertWithoutTransportesInput = {
    update: XOR<ClienteUpdateWithoutTransportesInput, ClienteUncheckedUpdateWithoutTransportesInput>
    create: XOR<ClienteCreateWithoutTransportesInput, ClienteUncheckedCreateWithoutTransportesInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutTransportesInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutTransportesInput, ClienteUncheckedUpdateWithoutTransportesInput>
  }

  export type ClienteUpdateWithoutTransportesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpjCpf?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteUncheckedUpdateWithoutTransportesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpjCpf?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoClienteFieldUpdateOperationsInput | $Enums.TipoCliente
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtestoUpsertWithWhereUniqueWithoutTransporteInput = {
    where: AtestoWhereUniqueInput
    update: XOR<AtestoUpdateWithoutTransporteInput, AtestoUncheckedUpdateWithoutTransporteInput>
    create: XOR<AtestoCreateWithoutTransporteInput, AtestoUncheckedCreateWithoutTransporteInput>
  }

  export type AtestoUpdateWithWhereUniqueWithoutTransporteInput = {
    where: AtestoWhereUniqueInput
    data: XOR<AtestoUpdateWithoutTransporteInput, AtestoUncheckedUpdateWithoutTransporteInput>
  }

  export type AtestoUpdateManyWithWhereWithoutTransporteInput = {
    where: AtestoScalarWhereInput
    data: XOR<AtestoUpdateManyMutationInput, AtestoUncheckedUpdateManyWithoutTransporteInput>
  }

  export type AtestoScalarWhereInput = {
    AND?: AtestoScalarWhereInput | AtestoScalarWhereInput[]
    OR?: AtestoScalarWhereInput[]
    NOT?: AtestoScalarWhereInput | AtestoScalarWhereInput[]
    id?: IntFilter<"Atesto"> | number
    transporteId?: IntFilter<"Atesto"> | number
    dataAtesto?: DateTimeFilter<"Atesto"> | Date | string
    tipo?: EnumTipoAtestoFilter<"Atesto"> | $Enums.TipoAtesto
    observacao?: StringNullableFilter<"Atesto"> | string | null
    usuarioId?: IntNullableFilter<"Atesto"> | number | null
    createdAt?: DateTimeFilter<"Atesto"> | Date | string
    updatedAt?: DateTimeFilter<"Atesto"> | Date | string
  }

  export type FaturaUpsertWithWhereUniqueWithoutTransporteInput = {
    where: FaturaWhereUniqueInput
    update: XOR<FaturaUpdateWithoutTransporteInput, FaturaUncheckedUpdateWithoutTransporteInput>
    create: XOR<FaturaCreateWithoutTransporteInput, FaturaUncheckedCreateWithoutTransporteInput>
  }

  export type FaturaUpdateWithWhereUniqueWithoutTransporteInput = {
    where: FaturaWhereUniqueInput
    data: XOR<FaturaUpdateWithoutTransporteInput, FaturaUncheckedUpdateWithoutTransporteInput>
  }

  export type FaturaUpdateManyWithWhereWithoutTransporteInput = {
    where: FaturaScalarWhereInput
    data: XOR<FaturaUpdateManyMutationInput, FaturaUncheckedUpdateManyWithoutTransporteInput>
  }

  export type FaturaScalarWhereInput = {
    AND?: FaturaScalarWhereInput | FaturaScalarWhereInput[]
    OR?: FaturaScalarWhereInput[]
    NOT?: FaturaScalarWhereInput | FaturaScalarWhereInput[]
    id?: IntFilter<"Fatura"> | number
    transporteId?: IntFilter<"Fatura"> | number
    numeroFatura?: StringFilter<"Fatura"> | string
    valor?: DecimalFilter<"Fatura"> | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeFilter<"Fatura"> | Date | string
    dataVencimento?: DateTimeFilter<"Fatura"> | Date | string
    status?: EnumStatusFaturaFilter<"Fatura"> | $Enums.StatusFatura
    linkBoleto?: StringNullableFilter<"Fatura"> | string | null
    createdAt?: DateTimeFilter<"Fatura"> | Date | string
    updatedAt?: DateTimeFilter<"Fatura"> | Date | string
  }

  export type TransporteCreateWithoutAtestosInput = {
    numeroCteOc: string
    dataOperacao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: Date | string | null
    dataVencimento?: Date | string | null
    dataAtesto?: Date | string | null
    dataNotaFiscal?: Date | string | null
    descricaoNotaFiscal?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    cliente: ClienteCreateNestedOneWithoutTransportesInput
    faturas?: FaturaCreateNestedManyWithoutTransporteInput
  }

  export type TransporteUncheckedCreateWithoutAtestosInput = {
    id?: number
    clienteId: number
    numeroCteOc: string
    dataOperacao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: Date | string | null
    dataVencimento?: Date | string | null
    dataAtesto?: Date | string | null
    dataNotaFiscal?: Date | string | null
    descricaoNotaFiscal?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    faturas?: FaturaUncheckedCreateNestedManyWithoutTransporteInput
  }

  export type TransporteCreateOrConnectWithoutAtestosInput = {
    where: TransporteWhereUniqueInput
    create: XOR<TransporteCreateWithoutAtestosInput, TransporteUncheckedCreateWithoutAtestosInput>
  }

  export type UsuarioCreateWithoutAtestosInput = {
    nome: string
    email: string
    senhaHash: string
    papel: $Enums.PapelUsuario
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UsuarioUncheckedCreateWithoutAtestosInput = {
    id?: number
    nome: string
    email: string
    senhaHash: string
    papel: $Enums.PapelUsuario
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UsuarioCreateOrConnectWithoutAtestosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutAtestosInput, UsuarioUncheckedCreateWithoutAtestosInput>
  }

  export type TransporteUpsertWithoutAtestosInput = {
    update: XOR<TransporteUpdateWithoutAtestosInput, TransporteUncheckedUpdateWithoutAtestosInput>
    create: XOR<TransporteCreateWithoutAtestosInput, TransporteUncheckedCreateWithoutAtestosInput>
    where?: TransporteWhereInput
  }

  export type TransporteUpdateToOneWithWhereWithoutAtestosInput = {
    where?: TransporteWhereInput
    data: XOR<TransporteUpdateWithoutAtestosInput, TransporteUncheckedUpdateWithoutAtestosInput>
  }

  export type TransporteUpdateWithoutAtestosInput = {
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutTransportesNestedInput
    faturas?: FaturaUpdateManyWithoutTransporteNestedInput
  }

  export type TransporteUncheckedUpdateWithoutAtestosInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    faturas?: FaturaUncheckedUpdateManyWithoutTransporteNestedInput
  }

  export type UsuarioUpsertWithoutAtestosInput = {
    update: XOR<UsuarioUpdateWithoutAtestosInput, UsuarioUncheckedUpdateWithoutAtestosInput>
    create: XOR<UsuarioCreateWithoutAtestosInput, UsuarioUncheckedCreateWithoutAtestosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutAtestosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutAtestosInput, UsuarioUncheckedUpdateWithoutAtestosInput>
  }

  export type UsuarioUpdateWithoutAtestosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senhaHash?: StringFieldUpdateOperationsInput | string
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateWithoutAtestosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senhaHash?: StringFieldUpdateOperationsInput | string
    papel?: EnumPapelUsuarioFieldUpdateOperationsInput | $Enums.PapelUsuario
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransporteCreateWithoutFaturasInput = {
    numeroCteOc: string
    dataOperacao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: Date | string | null
    dataVencimento?: Date | string | null
    dataAtesto?: Date | string | null
    dataNotaFiscal?: Date | string | null
    descricaoNotaFiscal?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    cliente: ClienteCreateNestedOneWithoutTransportesInput
    atestos?: AtestoCreateNestedManyWithoutTransporteInput
  }

  export type TransporteUncheckedCreateWithoutFaturasInput = {
    id?: number
    clienteId: number
    numeroCteOc: string
    dataOperacao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: Date | string | null
    dataVencimento?: Date | string | null
    dataAtesto?: Date | string | null
    dataNotaFiscal?: Date | string | null
    descricaoNotaFiscal?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    atestos?: AtestoUncheckedCreateNestedManyWithoutTransporteInput
  }

  export type TransporteCreateOrConnectWithoutFaturasInput = {
    where: TransporteWhereUniqueInput
    create: XOR<TransporteCreateWithoutFaturasInput, TransporteUncheckedCreateWithoutFaturasInput>
  }

  export type TransporteUpsertWithoutFaturasInput = {
    update: XOR<TransporteUpdateWithoutFaturasInput, TransporteUncheckedUpdateWithoutFaturasInput>
    create: XOR<TransporteCreateWithoutFaturasInput, TransporteUncheckedCreateWithoutFaturasInput>
    where?: TransporteWhereInput
  }

  export type TransporteUpdateToOneWithWhereWithoutFaturasInput = {
    where?: TransporteWhereInput
    data: XOR<TransporteUpdateWithoutFaturasInput, TransporteUncheckedUpdateWithoutFaturasInput>
  }

  export type TransporteUpdateWithoutFaturasInput = {
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutTransportesNestedInput
    atestos?: AtestoUpdateManyWithoutTransporteNestedInput
  }

  export type TransporteUncheckedUpdateWithoutFaturasInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    atestos?: AtestoUncheckedUpdateManyWithoutTransporteNestedInput
  }

  export type AtestoCreateWithoutUsuarioInput = {
    dataAtesto: Date | string
    tipo: $Enums.TipoAtesto
    observacao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    transporte: TransporteCreateNestedOneWithoutAtestosInput
  }

  export type AtestoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    transporteId: number
    dataAtesto: Date | string
    tipo: $Enums.TipoAtesto
    observacao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AtestoCreateOrConnectWithoutUsuarioInput = {
    where: AtestoWhereUniqueInput
    create: XOR<AtestoCreateWithoutUsuarioInput, AtestoUncheckedCreateWithoutUsuarioInput>
  }

  export type AtestoCreateManyUsuarioInputEnvelope = {
    data: AtestoCreateManyUsuarioInput | AtestoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type AtestoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: AtestoWhereUniqueInput
    update: XOR<AtestoUpdateWithoutUsuarioInput, AtestoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<AtestoCreateWithoutUsuarioInput, AtestoUncheckedCreateWithoutUsuarioInput>
  }

  export type AtestoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: AtestoWhereUniqueInput
    data: XOR<AtestoUpdateWithoutUsuarioInput, AtestoUncheckedUpdateWithoutUsuarioInput>
  }

  export type AtestoUpdateManyWithWhereWithoutUsuarioInput = {
    where: AtestoScalarWhereInput
    data: XOR<AtestoUpdateManyMutationInput, AtestoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type CentroCustoCreateWithoutDespesasInput = {
    nome: string
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CentroCustoUncheckedCreateWithoutDespesasInput = {
    id?: number
    nome: string
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CentroCustoCreateOrConnectWithoutDespesasInput = {
    where: CentroCustoWhereUniqueInput
    create: XOR<CentroCustoCreateWithoutDespesasInput, CentroCustoUncheckedCreateWithoutDespesasInput>
  }

  export type CentroCustoUpsertWithoutDespesasInput = {
    update: XOR<CentroCustoUpdateWithoutDespesasInput, CentroCustoUncheckedUpdateWithoutDespesasInput>
    create: XOR<CentroCustoCreateWithoutDespesasInput, CentroCustoUncheckedCreateWithoutDespesasInput>
    where?: CentroCustoWhereInput
  }

  export type CentroCustoUpdateToOneWithWhereWithoutDespesasInput = {
    where?: CentroCustoWhereInput
    data: XOR<CentroCustoUpdateWithoutDespesasInput, CentroCustoUncheckedUpdateWithoutDespesasInput>
  }

  export type CentroCustoUpdateWithoutDespesasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CentroCustoUncheckedUpdateWithoutDespesasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DespesaCreateWithoutCentroCustoInput = {
    categoria: $Enums.CategoriaDespesa
    valor: Decimal | DecimalJsLike | number | string
    data: Date | string
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DespesaUncheckedCreateWithoutCentroCustoInput = {
    id?: number
    categoria: $Enums.CategoriaDespesa
    valor: Decimal | DecimalJsLike | number | string
    data: Date | string
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DespesaCreateOrConnectWithoutCentroCustoInput = {
    where: DespesaWhereUniqueInput
    create: XOR<DespesaCreateWithoutCentroCustoInput, DespesaUncheckedCreateWithoutCentroCustoInput>
  }

  export type DespesaCreateManyCentroCustoInputEnvelope = {
    data: DespesaCreateManyCentroCustoInput | DespesaCreateManyCentroCustoInput[]
    skipDuplicates?: boolean
  }

  export type DespesaUpsertWithWhereUniqueWithoutCentroCustoInput = {
    where: DespesaWhereUniqueInput
    update: XOR<DespesaUpdateWithoutCentroCustoInput, DespesaUncheckedUpdateWithoutCentroCustoInput>
    create: XOR<DespesaCreateWithoutCentroCustoInput, DespesaUncheckedCreateWithoutCentroCustoInput>
  }

  export type DespesaUpdateWithWhereUniqueWithoutCentroCustoInput = {
    where: DespesaWhereUniqueInput
    data: XOR<DespesaUpdateWithoutCentroCustoInput, DespesaUncheckedUpdateWithoutCentroCustoInput>
  }

  export type DespesaUpdateManyWithWhereWithoutCentroCustoInput = {
    where: DespesaScalarWhereInput
    data: XOR<DespesaUpdateManyMutationInput, DespesaUncheckedUpdateManyWithoutCentroCustoInput>
  }

  export type DespesaScalarWhereInput = {
    AND?: DespesaScalarWhereInput | DespesaScalarWhereInput[]
    OR?: DespesaScalarWhereInput[]
    NOT?: DespesaScalarWhereInput | DespesaScalarWhereInput[]
    id?: IntFilter<"Despesa"> | number
    categoria?: EnumCategoriaDespesaFilter<"Despesa"> | $Enums.CategoriaDespesa
    valor?: DecimalFilter<"Despesa"> | Decimal | DecimalJsLike | number | string
    data?: DateTimeFilter<"Despesa"> | Date | string
    descricao?: StringNullableFilter<"Despesa"> | string | null
    centroCustoId?: IntNullableFilter<"Despesa"> | number | null
    createdAt?: DateTimeFilter<"Despesa"> | Date | string
    updatedAt?: DateTimeFilter<"Despesa"> | Date | string
  }

  export type TransporteCreateManyClienteInput = {
    id?: number
    numeroCteOc: string
    dataOperacao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: Date | string | null
    dataVencimento?: Date | string | null
    dataAtesto?: Date | string | null
    dataNotaFiscal?: Date | string | null
    descricaoNotaFiscal?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransporteUpdateWithoutClienteInput = {
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    atestos?: AtestoUpdateManyWithoutTransporteNestedInput
    faturas?: FaturaUpdateManyWithoutTransporteNestedInput
  }

  export type TransporteUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    atestos?: AtestoUncheckedUpdateManyWithoutTransporteNestedInput
    faturas?: FaturaUncheckedUpdateManyWithoutTransporteNestedInput
  }

  export type TransporteUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroCteOc?: StringFieldUpdateOperationsInput | string
    dataOperacao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEnvioFaturamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataVencimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataAtesto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataNotaFiscal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descricaoNotaFiscal?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtestoCreateManyTransporteInput = {
    id?: number
    dataAtesto: Date | string
    tipo: $Enums.TipoAtesto
    observacao?: string | null
    usuarioId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FaturaCreateManyTransporteInput = {
    id?: number
    numeroFatura: string
    valor: Decimal | DecimalJsLike | number | string
    dataEmissao: Date | string
    dataVencimento: Date | string
    status: $Enums.StatusFatura
    linkBoleto?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AtestoUpdateWithoutTransporteInput = {
    dataAtesto?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoAtestoFieldUpdateOperationsInput | $Enums.TipoAtesto
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneWithoutAtestosNestedInput
  }

  export type AtestoUncheckedUpdateWithoutTransporteInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataAtesto?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoAtestoFieldUpdateOperationsInput | $Enums.TipoAtesto
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtestoUncheckedUpdateManyWithoutTransporteInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataAtesto?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoAtestoFieldUpdateOperationsInput | $Enums.TipoAtesto
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FaturaUpdateWithoutTransporteInput = {
    numeroFatura?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusFaturaFieldUpdateOperationsInput | $Enums.StatusFatura
    linkBoleto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FaturaUncheckedUpdateWithoutTransporteInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroFatura?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusFaturaFieldUpdateOperationsInput | $Enums.StatusFatura
    linkBoleto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FaturaUncheckedUpdateManyWithoutTransporteInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroFatura?: StringFieldUpdateOperationsInput | string
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataVencimento?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusFaturaFieldUpdateOperationsInput | $Enums.StatusFatura
    linkBoleto?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtestoCreateManyUsuarioInput = {
    id?: number
    transporteId: number
    dataAtesto: Date | string
    tipo: $Enums.TipoAtesto
    observacao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AtestoUpdateWithoutUsuarioInput = {
    dataAtesto?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoAtestoFieldUpdateOperationsInput | $Enums.TipoAtesto
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    transporte?: TransporteUpdateOneRequiredWithoutAtestosNestedInput
  }

  export type AtestoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    transporteId?: IntFieldUpdateOperationsInput | number
    dataAtesto?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoAtestoFieldUpdateOperationsInput | $Enums.TipoAtesto
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AtestoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    transporteId?: IntFieldUpdateOperationsInput | number
    dataAtesto?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoAtestoFieldUpdateOperationsInput | $Enums.TipoAtesto
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DespesaCreateManyCentroCustoInput = {
    id?: number
    categoria: $Enums.CategoriaDespesa
    valor: Decimal | DecimalJsLike | number | string
    data: Date | string
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DespesaUpdateWithoutCentroCustoInput = {
    categoria?: EnumCategoriaDespesaFieldUpdateOperationsInput | $Enums.CategoriaDespesa
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DespesaUncheckedUpdateWithoutCentroCustoInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoria?: EnumCategoriaDespesaFieldUpdateOperationsInput | $Enums.CategoriaDespesa
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DespesaUncheckedUpdateManyWithoutCentroCustoInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoria?: EnumCategoriaDespesaFieldUpdateOperationsInput | $Enums.CategoriaDespesa
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}